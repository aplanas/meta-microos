SUMMARY = "Create books from markdown"
DESCRIPTION = "mdbook is a utility to create books from Markdown files"
LICENSE = "(Apache-2.0 | MIT) & Unicode-DFS-2016 & (Apache-2.0 | BSL-1.0) & (Apache-2.0 | ISC | MIT) & (Apache-2.0 | MIT) & (Apache-2.0 | Apache-2.0-WITH-LLVM-exception | MIT) & (Apache-2.0 | MIT | Zlib) & (MIT | Unlicense) & (Apache-2.0 | Zlib | MIT) & Apache-2.0 & BSD-3-Clause & CC0-1.0 & ISC & MIT & MPL-2.0"

PV = "0.4.30"

RPM_NAME = "mdbook-0.4.30-1.1.aarch64.rpm"
RPM_HASH = "4d24164a4139d06c7fb8914ffd404b0ec793b0e62afbc7fa392756c0ba1a56223f697096d333b98eebb0f11234e9bcd8edfb8b77d863c31986bef50716583b3b"

RPROVIDES:${PN} += "bundled(rust-crate:aho-corasick) \
bundled(rust-crate:ammonia) \
bundled(rust-crate:anstream) \
bundled(rust-crate:anstyle) \
bundled(rust-crate:anstyle-parse) \
bundled(rust-crate:anstyle-query) \
bundled(rust-crate:anyhow) \
bundled(rust-crate:autocfg) \
bundled(rust-crate:base64) \
bundled(rust-crate:bitflags) \
bundled(rust-crate:block-buffer) \
bundled(rust-crate:bstr) \
bundled(rust-crate:byteorder) \
bundled(rust-crate:bytes) \
bundled(rust-crate:cfg-if) \
bundled(rust-crate:chrono) \
bundled(rust-crate:clap) \
bundled(rust-crate:clap_builder) \
bundled(rust-crate:clap_complete) \
bundled(rust-crate:clap_lex) \
bundled(rust-crate:colorchoice) \
bundled(rust-crate:cpufeatures) \
bundled(rust-crate:crossbeam-channel) \
bundled(rust-crate:crossbeam-utils) \
bundled(rust-crate:crypto-common) \
bundled(rust-crate:digest) \
bundled(rust-crate:elasticlunr-rs) \
bundled(rust-crate:env_logger) \
bundled(rust-crate:fastrand) \
bundled(rust-crate:filetime) \
bundled(rust-crate:fnv) \
bundled(rust-crate:form_urlencoded) \
bundled(rust-crate:futf) \
bundled(rust-crate:futures-channel) \
bundled(rust-crate:futures-core) \
bundled(rust-crate:futures-macro) \
bundled(rust-crate:futures-sink) \
bundled(rust-crate:futures-task) \
bundled(rust-crate:futures-util) \
bundled(rust-crate:generic-array) \
bundled(rust-crate:getrandom) \
bundled(rust-crate:globset) \
bundled(rust-crate:h2) \
bundled(rust-crate:handlebars) \
bundled(rust-crate:hashbrown) \
bundled(rust-crate:headers) \
bundled(rust-crate:headers-core) \
bundled(rust-crate:html5ever) \
bundled(rust-crate:http) \
bundled(rust-crate:http-body) \
bundled(rust-crate:httparse) \
bundled(rust-crate:httpdate) \
bundled(rust-crate:humantime) \
bundled(rust-crate:hyper) \
bundled(rust-crate:iana-time-zone) \
bundled(rust-crate:idna) \
bundled(rust-crate:ignore) \
bundled(rust-crate:indexmap) \
bundled(rust-crate:inotify) \
bundled(rust-crate:inotify-sys) \
bundled(rust-crate:io-lifetimes) \
bundled(rust-crate:is-terminal) \
bundled(rust-crate:itoa) \
bundled(rust-crate:lazy_static) \
bundled(rust-crate:libc) \
bundled(rust-crate:linux-raw-sys) \
bundled(rust-crate:lock_api) \
bundled(rust-crate:log) \
bundled(rust-crate:mac) \
bundled(rust-crate:maplit) \
bundled(rust-crate:markup5ever) \
bundled(rust-crate:mdbook) \
bundled(rust-crate:memchr) \
bundled(rust-crate:mime) \
bundled(rust-crate:mime_guess) \
bundled(rust-crate:mio) \
bundled(rust-crate:new_debug_unreachable) \
bundled(rust-crate:notify) \
bundled(rust-crate:notify-debouncer-mini) \
bundled(rust-crate:num-traits) \
bundled(rust-crate:num_cpus) \
bundled(rust-crate:once_cell) \
bundled(rust-crate:opener) \
bundled(rust-crate:parking_lot) \
bundled(rust-crate:parking_lot_core) \
bundled(rust-crate:percent-encoding) \
bundled(rust-crate:pest) \
bundled(rust-crate:pest_derive) \
bundled(rust-crate:pest_generator) \
bundled(rust-crate:pest_meta) \
bundled(rust-crate:phf) \
bundled(rust-crate:phf_codegen) \
bundled(rust-crate:phf_generator) \
bundled(rust-crate:phf_shared) \
bundled(rust-crate:pin-project) \
bundled(rust-crate:pin-project-internal) \
bundled(rust-crate:pin-project-lite) \
bundled(rust-crate:pin-utils) \
bundled(rust-crate:ppv-lite86) \
bundled(rust-crate:precomputed-hash) \
bundled(rust-crate:proc-macro2) \
bundled(rust-crate:pulldown-cmark) \
bundled(rust-crate:quote) \
bundled(rust-crate:rand) \
bundled(rust-crate:rand_chacha) \
bundled(rust-crate:rand_core) \
bundled(rust-crate:regex) \
bundled(rust-crate:regex-automata) \
bundled(rust-crate:regex-syntax) \
bundled(rust-crate:rustix) \
bundled(rust-crate:rustls-pemfile) \
bundled(rust-crate:ryu) \
bundled(rust-crate:same-file) \
bundled(rust-crate:scoped-tls) \
bundled(rust-crate:scopeguard) \
bundled(rust-crate:serde) \
bundled(rust-crate:serde_derive) \
bundled(rust-crate:serde_json) \
bundled(rust-crate:serde_urlencoded) \
bundled(rust-crate:sha1) \
bundled(rust-crate:sha2) \
bundled(rust-crate:shlex) \
bundled(rust-crate:siphasher) \
bundled(rust-crate:slab) \
bundled(rust-crate:smallvec) \
bundled(rust-crate:socket2) \
bundled(rust-crate:string_cache) \
bundled(rust-crate:string_cache_codegen) \
bundled(rust-crate:strsim) \
bundled(rust-crate:syn) \
bundled(rust-crate:tempfile) \
bundled(rust-crate:tendril) \
bundled(rust-crate:termcolor) \
bundled(rust-crate:terminal_size) \
bundled(rust-crate:thiserror) \
bundled(rust-crate:thiserror-impl) \
bundled(rust-crate:thread_local) \
bundled(rust-crate:tinyvec) \
bundled(rust-crate:tinyvec_macros) \
bundled(rust-crate:tokio) \
bundled(rust-crate:tokio-macros) \
bundled(rust-crate:tokio-stream) \
bundled(rust-crate:tokio-tungstenite) \
bundled(rust-crate:tokio-util) \
bundled(rust-crate:toml) \
bundled(rust-crate:topological-sort) \
bundled(rust-crate:tower-service) \
bundled(rust-crate:tracing) \
bundled(rust-crate:tracing-core) \
bundled(rust-crate:try-lock) \
bundled(rust-crate:tungstenite) \
bundled(rust-crate:typenum) \
bundled(rust-crate:ucd-trie) \
bundled(rust-crate:unicase) \
bundled(rust-crate:unicode-bidi) \
bundled(rust-crate:unicode-ident) \
bundled(rust-crate:unicode-normalization) \
bundled(rust-crate:url) \
bundled(rust-crate:utf-8) \
bundled(rust-crate:utf8parse) \
bundled(rust-crate:version_check) \
bundled(rust-crate:walkdir) \
bundled(rust-crate:want) \
bundled(rust-crate:warp) \
mdbook \
mdbook(aarch-64)"

RDEPENDS:${PN} += "libc.so.6(GLIBC_2.34)(64bit) \
libgcc_s.so.1()(64bit) \
libgcc_s.so.1(GCC_3.0)(64bit) \
libgcc_s.so.1(GCC_3.3)(64bit) \
libgcc_s.so.1(GCC_4.2.0)(64bit) \
libm.so.6()(64bit) \
libm.so.6(GLIBC_2.17)(64bit)"

inherit rpm
