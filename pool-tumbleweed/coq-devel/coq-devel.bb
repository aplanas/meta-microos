SUMMARY = "Development files for coq"
DESCRIPTION = "This package contains development files for Coq."
LICENSE = "LGPL-2.1-only"

PV = "8.17.1"

RPM_NAME = "coq-devel-8.17.1-1.1.aarch64.rpm"
RPM_HASH = "44c07358676ae501abe2a92725cd02832e2ec7dbd979655025555dee1f3f438e6b155f8ce0cca50d4032f7dbe8c73601c4aa475e7ec1aa0eb353f30c8c3807e6"

RPROVIDES:${PN} += "coq-devel \
ocaml-Abbreviation \
ocaml-Abstract \
ocaml-AcyclicGraph \
ocaml-Arguments-renaming \
ocaml-Assumptions \
ocaml-AsyncTaskQueue \
ocaml-Attributes \
ocaml-Auto \
ocaml-Auto-ind-decl \
ocaml-Autorewrite \
ocaml-Aux-file \
ocaml-Boot \
ocaml-Boot--Env \
ocaml-Boot--Path \
ocaml-Boot--Usage \
ocaml-Boot--Util \
ocaml-Btauto-plugin \
ocaml-Btauto-plugin--G-btauto \
ocaml-Btauto-plugin--Refl-btauto \
ocaml-Btermdn \
ocaml-CArray \
ocaml-CAst \
ocaml-CClosure \
ocaml-CDebug \
ocaml-CEphemeron \
ocaml-CErrors \
ocaml-CLexer \
ocaml-CList \
ocaml-CMap \
ocaml-CObj \
ocaml-CPrimitives \
ocaml-CProfile \
ocaml-CSet \
ocaml-CSig \
ocaml-CString \
ocaml-CThread \
ocaml-CUnix \
ocaml-CWarnings \
ocaml-Canonical \
ocaml-Cases \
ocaml-Cbn \
ocaml-Cbv \
ocaml-Cc-plugin \
ocaml-Cc-plugin--Ccalgo \
ocaml-Cc-plugin--Ccproof \
ocaml-Cc-plugin--Cctac \
ocaml-Cc-plugin--G-congruence \
ocaml-Ccompile \
ocaml-Class-tactics \
ocaml-Classes \
ocaml-Clenv \
ocaml-Coercion \
ocaml-Coercionops \
ocaml-Colors \
ocaml-ComArguments \
ocaml-ComAssumption \
ocaml-ComCoercion \
ocaml-ComDefinition \
ocaml-ComExtraDeps \
ocaml-ComFixpoint \
ocaml-ComHints \
ocaml-ComInductive \
ocaml-ComPrimitive \
ocaml-ComProgramFixpoint \
ocaml-ComSearch \
ocaml-ComTactic \
ocaml-Common-compile \
ocaml-Constr \
ocaml-Constr-matching \
ocaml-Constrexpr \
ocaml-Constrexpr-ops \
ocaml-Constrextern \
ocaml-Constrintern \
ocaml-Context \
ocaml-Contradiction \
ocaml-Control \
ocaml-Conv-oracle \
ocaml-Cooking \
ocaml-Coq-config \
ocaml-CoqProject-file \
ocaml-Coqargs \
ocaml-Coqc \
ocaml-Coqcargs \
ocaml-Coqinit \
ocaml-Coqlib \
ocaml-Coqloadpath \
ocaml-Coqloop \
ocaml-Coqrc \
ocaml-Coqrun \
ocaml-Coqtop \
ocaml-CoqworkmgrApi \
ocaml-Core-plugins-findlib-compat \
ocaml-DAst \
ocaml-Dag \
ocaml-DebugHook \
ocaml-Declarations \
ocaml-Declare \
ocaml-DeclareInd \
ocaml-DeclareScheme \
ocaml-DeclareUctx \
ocaml-DeclareUniv \
ocaml-Declaremods \
ocaml-Declareops \
ocaml-Decls \
ocaml-Deprecation \
ocaml-Derive-plugin \
ocaml-Derive-plugin--Derive \
ocaml-Derive-plugin--G-derive \
ocaml-Detyping \
ocaml-Diff2 \
ocaml-Discharge \
ocaml-Dn \
ocaml-Document \
ocaml-Dumpglob \
ocaml-Dyn \
ocaml-EConstr \
ocaml-Eauto \
ocaml-Egramcoq \
ocaml-Egramml \
ocaml-Elim \
ocaml-Elimschemes \
ocaml-Entries \
ocaml-Envars \
ocaml-Environ \
ocaml-Eqdecide \
ocaml-Eqschemes \
ocaml-Equality \
ocaml-Esubst \
ocaml-Evar \
ocaml-Evar-kinds \
ocaml-Evar-tactics \
ocaml-Evarconv \
ocaml-Evardefine \
ocaml-Evarsolve \
ocaml-Evarutil \
ocaml-Evd \
ocaml-Exninfo \
ocaml-Extend \
ocaml-Extraction-plugin \
ocaml-Extraction-plugin--Common \
ocaml-Extraction-plugin--Extract-env \
ocaml-Extraction-plugin--Extraction \
ocaml-Extraction-plugin--G-extraction \
ocaml-Extraction-plugin--Haskell \
ocaml-Extraction-plugin--Json \
ocaml-Extraction-plugin--Miniml \
ocaml-Extraction-plugin--Mlutil \
ocaml-Extraction-plugin--Modutil \
ocaml-Extraction-plugin--Ocaml \
ocaml-Extraction-plugin--Scheme \
ocaml-Extraction-plugin--Table \
ocaml-Feedback \
ocaml-Find-subterm \
ocaml-Firstorder-plugin \
ocaml-Firstorder-plugin--Formula \
ocaml-Firstorder-plugin--G-ground \
ocaml-Firstorder-plugin--Ground \
ocaml-Firstorder-plugin--Instances \
ocaml-Firstorder-plugin--Rules \
ocaml-Firstorder-plugin--Sequent \
ocaml-Firstorder-plugin--Unify \
ocaml-Flags \
ocaml-Float64 \
ocaml-Float64-common \
ocaml-Ftactic \
ocaml-Funind-plugin \
ocaml-Funind-plugin--Functional-principles-proofs \
ocaml-Funind-plugin--Functional-principles-types \
ocaml-Funind-plugin--G-indfun \
ocaml-Funind-plugin--Gen-principle \
ocaml-Funind-plugin--Glob-term-to-relation \
ocaml-Funind-plugin--Glob-termops \
ocaml-Funind-plugin--Indfun \
ocaml-Funind-plugin--Indfun-common \
ocaml-Funind-plugin--Invfun \
ocaml-Funind-plugin--Recdef \
ocaml-Future \
ocaml-G-constr \
ocaml-G-prim \
ocaml-G-proofs \
ocaml-G-toplevel \
ocaml-G-vernac \
ocaml-Genarg \
ocaml-Genintern \
ocaml-Geninterp \
ocaml-Genlambda \
ocaml-Genprint \
ocaml-Genredexpr \
ocaml-Glob-ops \
ocaml-Glob-term \
ocaml-GlobEnv \
ocaml-Global \
ocaml-Globnames \
ocaml-Goal-select \
ocaml-Goptions \
ocaml-Gramlib \
ocaml-Gramlib--Gramext \
ocaml-Gramlib--Grammar \
ocaml-Gramlib--LStream \
ocaml-Gramlib--Plexing \
ocaml-Gramlib--Stream \
ocaml-HMap \
ocaml-Hashcons \
ocaml-Hashset \
ocaml-Heads \
ocaml-Heap \
ocaml-Himsg \
ocaml-Hints \
ocaml-Hipattern \
ocaml-Hook \
ocaml-IStream \
ocaml-Impargs \
ocaml-Implicit-quantifiers \
ocaml-Ind-tables \
ocaml-IndTyping \
ocaml-Indrec \
ocaml-Indschemes \
ocaml-Indtypes \
ocaml-Inductive \
ocaml-Inductiveops \
ocaml-InferCumulativity \
ocaml-Int \
ocaml-Interface \
ocaml-Inv \
ocaml-Keys \
ocaml-Lib \
ocaml-Libnames \
ocaml-Libobject \
ocaml-Library \
ocaml-Load \
ocaml-Loadpath \
ocaml-Loc \
ocaml-Locality \
ocaml-Locus \
ocaml-Locusops \
ocaml-Logic \
ocaml-Logic-monad \
ocaml-Ltac-plugin \
ocaml-Ltac-plugin--ComRewrite \
ocaml-Ltac-plugin--Coretactics \
ocaml-Ltac-plugin--Extraargs \
ocaml-Ltac-plugin--Extratactics \
ocaml-Ltac-plugin--G-auto \
ocaml-Ltac-plugin--G-class \
ocaml-Ltac-plugin--G-eqdecide \
ocaml-Ltac-plugin--G-ltac \
ocaml-Ltac-plugin--G-obligations \
ocaml-Ltac-plugin--G-rewrite \
ocaml-Ltac-plugin--G-tactic \
ocaml-Ltac-plugin--Internals \
ocaml-Ltac-plugin--Leminv \
ocaml-Ltac-plugin--Pltac \
ocaml-Ltac-plugin--Pptactic \
ocaml-Ltac-plugin--Profile-ltac \
ocaml-Ltac-plugin--Profile-ltac-tactics \
ocaml-Ltac-plugin--Tacarg \
ocaml-Ltac-plugin--Taccoerce \
ocaml-Ltac-plugin--Tacentries \
ocaml-Ltac-plugin--Tacenv \
ocaml-Ltac-plugin--Tacexpr \
ocaml-Ltac-plugin--Tacintern \
ocaml-Ltac-plugin--Tacinterp \
ocaml-Ltac-plugin--Tacsubst \
ocaml-Ltac-plugin--Tactic-debug \
ocaml-Ltac-plugin--Tactic-matching \
ocaml-Ltac-plugin--Tactic-option \
ocaml-Ltac-pretype \
ocaml-Ltac2-plugin \
ocaml-Ltac2-plugin--G-ltac2 \
ocaml-Ltac2-plugin--Tac2core \
ocaml-Ltac2-plugin--Tac2dyn \
ocaml-Ltac2-plugin--Tac2entries \
ocaml-Ltac2-plugin--Tac2env \
ocaml-Ltac2-plugin--Tac2expr \
ocaml-Ltac2-plugin--Tac2extffi \
ocaml-Ltac2-plugin--Tac2ffi \
ocaml-Ltac2-plugin--Tac2intern \
ocaml-Ltac2-plugin--Tac2interp \
ocaml-Ltac2-plugin--Tac2match \
ocaml-Ltac2-plugin--Tac2print \
ocaml-Ltac2-plugin--Tac2qexpr \
ocaml-Ltac2-plugin--Tac2quote \
ocaml-Ltac2-plugin--Tac2stdlib \
ocaml-Ltac2-plugin--Tac2tactics \
ocaml-Ltac2-plugin--Tac2types \
ocaml-Ltac2-plugin--Tac2typing-env \
ocaml-Metasyntax \
ocaml-Micromega-plugin \
ocaml-Micromega-plugin--Certificate \
ocaml-Micromega-plugin--Coq-micromega \
ocaml-Micromega-plugin--G-micromega \
ocaml-Micromega-plugin--Itv \
ocaml-Micromega-plugin--Linsolve \
ocaml-Micromega-plugin--Micromega \
ocaml-Micromega-plugin--Mutils \
ocaml-Micromega-plugin--NumCompat \
ocaml-Micromega-plugin--Persistent-cache \
ocaml-Micromega-plugin--Polynomial \
ocaml-Micromega-plugin--Simplex \
ocaml-Micromega-plugin--Sos \
ocaml-Micromega-plugin--Sos-lib \
ocaml-Micromega-plugin--Sos-types \
ocaml-Micromega-plugin--Vect \
ocaml-Miscprint \
ocaml-Mltop \
ocaml-Mod-subst \
ocaml-Mod-typing \
ocaml-Modintern \
ocaml-Modops \
ocaml-Monad \
ocaml-NCoq-Arith-Arith \
ocaml-NCoq-Arith-Arith-base \
ocaml-NCoq-Arith-Arith-prebase \
ocaml-NCoq-Arith-Between \
ocaml-NCoq-Arith-Bool-nat \
ocaml-NCoq-Arith-Cantor \
ocaml-NCoq-Arith-Compare \
ocaml-NCoq-Arith-Compare-dec \
ocaml-NCoq-Arith-Div2 \
ocaml-NCoq-Arith-EqNat \
ocaml-NCoq-Arith-Euclid \
ocaml-NCoq-Arith-Even \
ocaml-NCoq-Arith-Factorial \
ocaml-NCoq-Arith-Gt \
ocaml-NCoq-Arith-Le \
ocaml-NCoq-Arith-Lt \
ocaml-NCoq-Arith-Max \
ocaml-NCoq-Arith-Min \
ocaml-NCoq-Arith-Minus \
ocaml-NCoq-Arith-Mult \
ocaml-NCoq-Arith-Peano-dec \
ocaml-NCoq-Arith-PeanoNat \
ocaml-NCoq-Arith-Plus \
ocaml-NCoq-Arith-Wf-nat \
ocaml-NCoq-Array-PArray \
ocaml-NCoq-Bool-Bool \
ocaml-NCoq-Bool-BoolEq \
ocaml-NCoq-Bool-BoolOrder \
ocaml-NCoq-Bool-Bvector \
ocaml-NCoq-Bool-DecBool \
ocaml-NCoq-Bool-IfProp \
ocaml-NCoq-Bool-Sumbool \
ocaml-NCoq-Bool-Zerob \
ocaml-NCoq-Classes-CEquivalence \
ocaml-NCoq-Classes-CMorphisms \
ocaml-NCoq-Classes-CRelationClasses \
ocaml-NCoq-Classes-DecidableClass \
ocaml-NCoq-Classes-EquivDec \
ocaml-NCoq-Classes-Equivalence \
ocaml-NCoq-Classes-Init \
ocaml-NCoq-Classes-Morphisms \
ocaml-NCoq-Classes-Morphisms-Prop \
ocaml-NCoq-Classes-Morphisms-Relations \
ocaml-NCoq-Classes-RelationClasses \
ocaml-NCoq-Classes-RelationPairs \
ocaml-NCoq-Classes-SetoidClass \
ocaml-NCoq-Classes-SetoidDec \
ocaml-NCoq-Classes-SetoidTactics \
ocaml-NCoq-Compat-AdmitAxiom \
ocaml-NCoq-Compat-Coq815 \
ocaml-NCoq-Compat-Coq816 \
ocaml-NCoq-Compat-Coq817 \
ocaml-NCoq-FSets-FMapAVL \
ocaml-NCoq-FSets-FMapFacts \
ocaml-NCoq-FSets-FMapFullAVL \
ocaml-NCoq-FSets-FMapInterface \
ocaml-NCoq-FSets-FMapList \
ocaml-NCoq-FSets-FMapPositive \
ocaml-NCoq-FSets-FMapWeakList \
ocaml-NCoq-FSets-FMaps \
ocaml-NCoq-FSets-FSetAVL \
ocaml-NCoq-FSets-FSetBridge \
ocaml-NCoq-FSets-FSetCompat \
ocaml-NCoq-FSets-FSetDecide \
ocaml-NCoq-FSets-FSetEqProperties \
ocaml-NCoq-FSets-FSetFacts \
ocaml-NCoq-FSets-FSetInterface \
ocaml-NCoq-FSets-FSetList \
ocaml-NCoq-FSets-FSetPositive \
ocaml-NCoq-FSets-FSetProperties \
ocaml-NCoq-FSets-FSetToFiniteSet \
ocaml-NCoq-FSets-FSetWeakList \
ocaml-NCoq-FSets-FSets \
ocaml-NCoq-Floats-FloatAxioms \
ocaml-NCoq-Floats-FloatClass \
ocaml-NCoq-Floats-FloatLemmas \
ocaml-NCoq-Floats-FloatOps \
ocaml-NCoq-Floats-Floats \
ocaml-NCoq-Floats-PrimFloat \
ocaml-NCoq-Floats-SpecFloat \
ocaml-NCoq-Init-Byte \
ocaml-NCoq-Init-Datatypes \
ocaml-NCoq-Init-Decimal \
ocaml-NCoq-Init-Hexadecimal \
ocaml-NCoq-Init-Logic \
ocaml-NCoq-Init-Ltac \
ocaml-NCoq-Init-Nat \
ocaml-NCoq-Init-Notations \
ocaml-NCoq-Init-Number \
ocaml-NCoq-Init-Peano \
ocaml-NCoq-Init-Prelude \
ocaml-NCoq-Init-Specif \
ocaml-NCoq-Init-Tactics \
ocaml-NCoq-Init-Tauto \
ocaml-NCoq-Init-Wf \
ocaml-NCoq-Lists-List \
ocaml-NCoq-Lists-ListDec \
ocaml-NCoq-Lists-ListSet \
ocaml-NCoq-Lists-ListTactics \
ocaml-NCoq-Lists-SetoidList \
ocaml-NCoq-Lists-SetoidPermutation \
ocaml-NCoq-Lists-StreamMemo \
ocaml-NCoq-Lists-Streams \
ocaml-NCoq-Logic-Adjointification \
ocaml-NCoq-Logic-Berardi \
ocaml-NCoq-Logic-ChoiceFacts \
ocaml-NCoq-Logic-Classical \
ocaml-NCoq-Logic-Classical-Pred-Type \
ocaml-NCoq-Logic-Classical-Prop \
ocaml-NCoq-Logic-ClassicalChoice \
ocaml-NCoq-Logic-ClassicalDescription \
ocaml-NCoq-Logic-ClassicalEpsilon \
ocaml-NCoq-Logic-ClassicalFacts \
ocaml-NCoq-Logic-ClassicalUniqueChoice \
ocaml-NCoq-Logic-ConstructiveEpsilon \
ocaml-NCoq-Logic-Decidable \
ocaml-NCoq-Logic-Description \
ocaml-NCoq-Logic-Diaconescu \
ocaml-NCoq-Logic-Epsilon \
ocaml-NCoq-Logic-Eqdep \
ocaml-NCoq-Logic-Eqdep-dec \
ocaml-NCoq-Logic-EqdepFacts \
ocaml-NCoq-Logic-ExtensionalFunctionRepresentative \
ocaml-NCoq-Logic-ExtensionalityFacts \
ocaml-NCoq-Logic-FinFun \
ocaml-NCoq-Logic-FunctionalExtensionality \
ocaml-NCoq-Logic-HLevels \
ocaml-NCoq-Logic-Hurkens \
ocaml-NCoq-Logic-IndefiniteDescription \
ocaml-NCoq-Logic-JMeq \
ocaml-NCoq-Logic-ProofIrrelevance \
ocaml-NCoq-Logic-ProofIrrelevanceFacts \
ocaml-NCoq-Logic-PropExtensionality \
ocaml-NCoq-Logic-PropExtensionalityFacts \
ocaml-NCoq-Logic-PropFacts \
ocaml-NCoq-Logic-RelationalChoice \
ocaml-NCoq-Logic-SetIsType \
ocaml-NCoq-Logic-SetoidChoice \
ocaml-NCoq-Logic-StrictProp \
ocaml-NCoq-Logic-WKL \
ocaml-NCoq-Logic-WeakFan \
ocaml-NCoq-MSets-MSetAVL \
ocaml-NCoq-MSets-MSetDecide \
ocaml-NCoq-MSets-MSetEqProperties \
ocaml-NCoq-MSets-MSetFacts \
ocaml-NCoq-MSets-MSetGenTree \
ocaml-NCoq-MSets-MSetInterface \
ocaml-NCoq-MSets-MSetList \
ocaml-NCoq-MSets-MSetPositive \
ocaml-NCoq-MSets-MSetProperties \
ocaml-NCoq-MSets-MSetRBT \
ocaml-NCoq-MSets-MSetToFiniteSet \
ocaml-NCoq-MSets-MSetWeakList \
ocaml-NCoq-MSets-MSets \
ocaml-NCoq-NArith-BinNat \
ocaml-NCoq-NArith-BinNatDef \
ocaml-NCoq-NArith-NArith \
ocaml-NCoq-NArith-Ndec \
ocaml-NCoq-NArith-Ndigits \
ocaml-NCoq-NArith-Ndist \
ocaml-NCoq-NArith-Ndiv-def \
ocaml-NCoq-NArith-Ngcd-def \
ocaml-NCoq-NArith-Nnat \
ocaml-NCoq-NArith-Nsqrt-def \
ocaml-NCoq-Numbers-AltBinNotations \
ocaml-NCoq-Numbers-BinNums \
ocaml-NCoq-Numbers-Cyclic-Abstract-CarryType \
ocaml-NCoq-Numbers-Cyclic-Abstract-CyclicAxioms \
ocaml-NCoq-Numbers-Cyclic-Abstract-DoubleType \
ocaml-NCoq-Numbers-Cyclic-Abstract-NZCyclic \
ocaml-NCoq-Numbers-Cyclic-Int31-Cyclic31 \
ocaml-NCoq-Numbers-Cyclic-Int31-Int31 \
ocaml-NCoq-Numbers-Cyclic-Int31-Ring31 \
ocaml-NCoq-Numbers-Cyclic-Int63-Cyclic63 \
ocaml-NCoq-Numbers-Cyclic-Int63-PrimInt63 \
ocaml-NCoq-Numbers-Cyclic-Int63-Ring63 \
ocaml-NCoq-Numbers-Cyclic-Int63-Sint63 \
ocaml-NCoq-Numbers-Cyclic-Int63-Uint63 \
ocaml-NCoq-Numbers-Cyclic-ZModulo-ZModulo \
ocaml-NCoq-Numbers-DecimalFacts \
ocaml-NCoq-Numbers-DecimalN \
ocaml-NCoq-Numbers-DecimalNat \
ocaml-NCoq-Numbers-DecimalPos \
ocaml-NCoq-Numbers-DecimalQ \
ocaml-NCoq-Numbers-DecimalR \
ocaml-NCoq-Numbers-DecimalString \
ocaml-NCoq-Numbers-DecimalZ \
ocaml-NCoq-Numbers-HexadecimalFacts \
ocaml-NCoq-Numbers-HexadecimalN \
ocaml-NCoq-Numbers-HexadecimalNat \
ocaml-NCoq-Numbers-HexadecimalPos \
ocaml-NCoq-Numbers-HexadecimalQ \
ocaml-NCoq-Numbers-HexadecimalR \
ocaml-NCoq-Numbers-HexadecimalString \
ocaml-NCoq-Numbers-HexadecimalZ \
ocaml-NCoq-Numbers-Integer-Abstract-ZAdd \
ocaml-NCoq-Numbers-Integer-Abstract-ZAddOrder \
ocaml-NCoq-Numbers-Integer-Abstract-ZAxioms \
ocaml-NCoq-Numbers-Integer-Abstract-ZBase \
ocaml-NCoq-Numbers-Integer-Abstract-ZBits \
ocaml-NCoq-Numbers-Integer-Abstract-ZDivEucl \
ocaml-NCoq-Numbers-Integer-Abstract-ZDivFloor \
ocaml-NCoq-Numbers-Integer-Abstract-ZDivTrunc \
ocaml-NCoq-Numbers-Integer-Abstract-ZGcd \
ocaml-NCoq-Numbers-Integer-Abstract-ZLcm \
ocaml-NCoq-Numbers-Integer-Abstract-ZLt \
ocaml-NCoq-Numbers-Integer-Abstract-ZMaxMin \
ocaml-NCoq-Numbers-Integer-Abstract-ZMul \
ocaml-NCoq-Numbers-Integer-Abstract-ZMulOrder \
ocaml-NCoq-Numbers-Integer-Abstract-ZParity \
ocaml-NCoq-Numbers-Integer-Abstract-ZPow \
ocaml-NCoq-Numbers-Integer-Abstract-ZProperties \
ocaml-NCoq-Numbers-Integer-Abstract-ZSgnAbs \
ocaml-NCoq-Numbers-Integer-Binary-ZBinary \
ocaml-NCoq-Numbers-Integer-NatPairs-ZNatPairs \
ocaml-NCoq-Numbers-NaryFunctions \
ocaml-NCoq-Numbers-NatInt-NZAdd \
ocaml-NCoq-Numbers-NatInt-NZAddOrder \
ocaml-NCoq-Numbers-NatInt-NZAxioms \
ocaml-NCoq-Numbers-NatInt-NZBase \
ocaml-NCoq-Numbers-NatInt-NZBits \
ocaml-NCoq-Numbers-NatInt-NZDiv \
ocaml-NCoq-Numbers-NatInt-NZDomain \
ocaml-NCoq-Numbers-NatInt-NZGcd \
ocaml-NCoq-Numbers-NatInt-NZLog \
ocaml-NCoq-Numbers-NatInt-NZMul \
ocaml-NCoq-Numbers-NatInt-NZMulOrder \
ocaml-NCoq-Numbers-NatInt-NZOrder \
ocaml-NCoq-Numbers-NatInt-NZParity \
ocaml-NCoq-Numbers-NatInt-NZPow \
ocaml-NCoq-Numbers-NatInt-NZProperties \
ocaml-NCoq-Numbers-NatInt-NZSqrt \
ocaml-NCoq-Numbers-Natural-Abstract-NAdd \
ocaml-NCoq-Numbers-Natural-Abstract-NAddOrder \
ocaml-NCoq-Numbers-Natural-Abstract-NAxioms \
ocaml-NCoq-Numbers-Natural-Abstract-NBase \
ocaml-NCoq-Numbers-Natural-Abstract-NBits \
ocaml-NCoq-Numbers-Natural-Abstract-NDefOps \
ocaml-NCoq-Numbers-Natural-Abstract-NDiv \
ocaml-NCoq-Numbers-Natural-Abstract-NDiv0 \
ocaml-NCoq-Numbers-Natural-Abstract-NGcd \
ocaml-NCoq-Numbers-Natural-Abstract-NIso \
ocaml-NCoq-Numbers-Natural-Abstract-NLcm \
ocaml-NCoq-Numbers-Natural-Abstract-NLcm0 \
ocaml-NCoq-Numbers-Natural-Abstract-NLog \
ocaml-NCoq-Numbers-Natural-Abstract-NMaxMin \
ocaml-NCoq-Numbers-Natural-Abstract-NMulOrder \
ocaml-NCoq-Numbers-Natural-Abstract-NOrder \
ocaml-NCoq-Numbers-Natural-Abstract-NParity \
ocaml-NCoq-Numbers-Natural-Abstract-NPow \
ocaml-NCoq-Numbers-Natural-Abstract-NProperties \
ocaml-NCoq-Numbers-Natural-Abstract-NSqrt \
ocaml-NCoq-Numbers-Natural-Abstract-NStrongRec \
ocaml-NCoq-Numbers-Natural-Abstract-NSub \
ocaml-NCoq-Numbers-Natural-Binary-NBinary \
ocaml-NCoq-Numbers-Natural-Peano-NPeano \
ocaml-NCoq-Numbers-NumPrelude \
ocaml-NCoq-PArith-BinPos \
ocaml-NCoq-PArith-BinPosDef \
ocaml-NCoq-PArith-PArith \
ocaml-NCoq-PArith-POrderedType \
ocaml-NCoq-PArith-Pnat \
ocaml-NCoq-Program-Basics \
ocaml-NCoq-Program-Combinators \
ocaml-NCoq-Program-Equality \
ocaml-NCoq-Program-Program \
ocaml-NCoq-Program-Subset \
ocaml-NCoq-Program-Syntax \
ocaml-NCoq-Program-Tactics \
ocaml-NCoq-Program-Utils \
ocaml-NCoq-Program-Wf \
ocaml-NCoq-QArith-QArith \
ocaml-NCoq-QArith-QArith-base \
ocaml-NCoq-QArith-QOrderedType \
ocaml-NCoq-QArith-Qabs \
ocaml-NCoq-QArith-Qcabs \
ocaml-NCoq-QArith-Qcanon \
ocaml-NCoq-QArith-Qfield \
ocaml-NCoq-QArith-Qminmax \
ocaml-NCoq-QArith-Qpower \
ocaml-NCoq-QArith-Qreals \
ocaml-NCoq-QArith-Qreduction \
ocaml-NCoq-QArith-Qring \
ocaml-NCoq-QArith-Qround \
ocaml-NCoq-Reals-Abstract-ConstructiveAbs \
ocaml-NCoq-Reals-Abstract-ConstructiveLUB \
ocaml-NCoq-Reals-Abstract-ConstructiveLimits \
ocaml-NCoq-Reals-Abstract-ConstructiveMinMax \
ocaml-NCoq-Reals-Abstract-ConstructivePower \
ocaml-NCoq-Reals-Abstract-ConstructiveReals \
ocaml-NCoq-Reals-Abstract-ConstructiveRealsMorphisms \
ocaml-NCoq-Reals-Abstract-ConstructiveSum \
ocaml-NCoq-Reals-Alembert \
ocaml-NCoq-Reals-AltSeries \
ocaml-NCoq-Reals-ArithProp \
ocaml-NCoq-Reals-Binomial \
ocaml-NCoq-Reals-Cauchy-ConstructiveCauchyAbs \
ocaml-NCoq-Reals-Cauchy-ConstructiveCauchyReals \
ocaml-NCoq-Reals-Cauchy-ConstructiveCauchyRealsMult \
ocaml-NCoq-Reals-Cauchy-ConstructiveExtra \
ocaml-NCoq-Reals-Cauchy-ConstructiveRcomplete \
ocaml-NCoq-Reals-Cauchy-PosExtra \
ocaml-NCoq-Reals-Cauchy-QExtra \
ocaml-NCoq-Reals-Cauchy-prod \
ocaml-NCoq-Reals-ClassicalConstructiveReals \
ocaml-NCoq-Reals-ClassicalDedekindReals \
ocaml-NCoq-Reals-Cos-plus \
ocaml-NCoq-Reals-Cos-rel \
ocaml-NCoq-Reals-DiscrR \
ocaml-NCoq-Reals-Exp-prop \
ocaml-NCoq-Reals-Integration \
ocaml-NCoq-Reals-MVT \
ocaml-NCoq-Reals-Machin \
ocaml-NCoq-Reals-NewtonInt \
ocaml-NCoq-Reals-PSeries-reg \
ocaml-NCoq-Reals-PartSum \
ocaml-NCoq-Reals-R-Ifp \
ocaml-NCoq-Reals-R-sqr \
ocaml-NCoq-Reals-R-sqrt \
ocaml-NCoq-Reals-RIneq \
ocaml-NCoq-Reals-RList \
ocaml-NCoq-Reals-ROrderedType \
ocaml-NCoq-Reals-Ranalysis \
ocaml-NCoq-Reals-Ranalysis-reg \
ocaml-NCoq-Reals-Ranalysis1 \
ocaml-NCoq-Reals-Ranalysis2 \
ocaml-NCoq-Reals-Ranalysis3 \
ocaml-NCoq-Reals-Ranalysis4 \
ocaml-NCoq-Reals-Ranalysis5 \
ocaml-NCoq-Reals-Ratan \
ocaml-NCoq-Reals-Raxioms \
ocaml-NCoq-Reals-Rbase \
ocaml-NCoq-Reals-Rbasic-fun \
ocaml-NCoq-Reals-Rcomplete \
ocaml-NCoq-Reals-Rdefinitions \
ocaml-NCoq-Reals-Rderiv \
ocaml-NCoq-Reals-Reals \
ocaml-NCoq-Reals-Rfunctions \
ocaml-NCoq-Reals-Rgeom \
ocaml-NCoq-Reals-RiemannInt \
ocaml-NCoq-Reals-RiemannInt-SF \
ocaml-NCoq-Reals-Rlimit \
ocaml-NCoq-Reals-Rlogic \
ocaml-NCoq-Reals-Rminmax \
ocaml-NCoq-Reals-Rpow-def \
ocaml-NCoq-Reals-Rpower \
ocaml-NCoq-Reals-Rprod \
ocaml-NCoq-Reals-Rregisternames \
ocaml-NCoq-Reals-Rseries \
ocaml-NCoq-Reals-Rsigma \
ocaml-NCoq-Reals-Rsqrt-def \
ocaml-NCoq-Reals-Rtopology \
ocaml-NCoq-Reals-Rtrigo \
ocaml-NCoq-Reals-Rtrigo-alt \
ocaml-NCoq-Reals-Rtrigo-calc \
ocaml-NCoq-Reals-Rtrigo-def \
ocaml-NCoq-Reals-Rtrigo-facts \
ocaml-NCoq-Reals-Rtrigo-fun \
ocaml-NCoq-Reals-Rtrigo-reg \
ocaml-NCoq-Reals-Rtrigo1 \
ocaml-NCoq-Reals-Runcountable \
ocaml-NCoq-Reals-SeqProp \
ocaml-NCoq-Reals-SeqSeries \
ocaml-NCoq-Reals-SplitAbsolu \
ocaml-NCoq-Reals-SplitRmult \
ocaml-NCoq-Reals-Sqrt-reg \
ocaml-NCoq-Relations-Operators-Properties \
ocaml-NCoq-Relations-Relation-Definitions \
ocaml-NCoq-Relations-Relation-Operators \
ocaml-NCoq-Relations-Relations \
ocaml-NCoq-Setoids-Setoid \
ocaml-NCoq-Sets-Classical-sets \
ocaml-NCoq-Sets-Constructive-sets \
ocaml-NCoq-Sets-Cpo \
ocaml-NCoq-Sets-Ensembles \
ocaml-NCoq-Sets-Finite-sets \
ocaml-NCoq-Sets-Finite-sets-facts \
ocaml-NCoq-Sets-Image \
ocaml-NCoq-Sets-Infinite-sets \
ocaml-NCoq-Sets-Integers \
ocaml-NCoq-Sets-Multiset \
ocaml-NCoq-Sets-Partial-Order \
ocaml-NCoq-Sets-Permut \
ocaml-NCoq-Sets-Powerset \
ocaml-NCoq-Sets-Powerset-Classical-facts \
ocaml-NCoq-Sets-Powerset-facts \
ocaml-NCoq-Sets-Relations-1 \
ocaml-NCoq-Sets-Relations-1-facts \
ocaml-NCoq-Sets-Relations-2 \
ocaml-NCoq-Sets-Relations-2-facts \
ocaml-NCoq-Sets-Relations-3 \
ocaml-NCoq-Sets-Relations-3-facts \
ocaml-NCoq-Sets-Uniset \
ocaml-NCoq-Sorting-CPermutation \
ocaml-NCoq-Sorting-Heap \
ocaml-NCoq-Sorting-Mergesort \
ocaml-NCoq-Sorting-PermutEq \
ocaml-NCoq-Sorting-PermutSetoid \
ocaml-NCoq-Sorting-Permutation \
ocaml-NCoq-Sorting-Sorted \
ocaml-NCoq-Sorting-Sorting \
ocaml-NCoq-Strings-Ascii \
ocaml-NCoq-Strings-BinaryString \
ocaml-NCoq-Strings-Byte \
ocaml-NCoq-Strings-ByteVector \
ocaml-NCoq-Strings-HexString \
ocaml-NCoq-Strings-OctalString \
ocaml-NCoq-Strings-String \
ocaml-NCoq-Structures-DecidableType \
ocaml-NCoq-Structures-DecidableTypeEx \
ocaml-NCoq-Structures-Equalities \
ocaml-NCoq-Structures-EqualitiesFacts \
ocaml-NCoq-Structures-GenericMinMax \
ocaml-NCoq-Structures-OrderedType \
ocaml-NCoq-Structures-OrderedTypeAlt \
ocaml-NCoq-Structures-OrderedTypeEx \
ocaml-NCoq-Structures-Orders \
ocaml-NCoq-Structures-OrdersAlt \
ocaml-NCoq-Structures-OrdersEx \
ocaml-NCoq-Structures-OrdersFacts \
ocaml-NCoq-Structures-OrdersLists \
ocaml-NCoq-Structures-OrdersTac \
ocaml-NCoq-Unicode-Utf8 \
ocaml-NCoq-Unicode-Utf8-core \
ocaml-NCoq-Vectors-Fin \
ocaml-NCoq-Vectors-Vector \
ocaml-NCoq-Vectors-VectorDef \
ocaml-NCoq-Vectors-VectorEq \
ocaml-NCoq-Vectors-VectorSpec \
ocaml-NCoq-Wellfounded-Disjoint-Union \
ocaml-NCoq-Wellfounded-Inclusion \
ocaml-NCoq-Wellfounded-Inverse-Image \
ocaml-NCoq-Wellfounded-Lexicographic-Exponentiation \
ocaml-NCoq-Wellfounded-Lexicographic-Product \
ocaml-NCoq-Wellfounded-Transitive-Closure \
ocaml-NCoq-Wellfounded-Union \
ocaml-NCoq-Wellfounded-Well-Ordering \
ocaml-NCoq-Wellfounded-Wellfounded \
ocaml-NCoq-ZArith-BinInt \
ocaml-NCoq-ZArith-BinIntDef \
ocaml-NCoq-ZArith-Int \
ocaml-NCoq-ZArith-Wf-Z \
ocaml-NCoq-ZArith-ZArith \
ocaml-NCoq-ZArith-ZArith-base \
ocaml-NCoq-ZArith-ZArith-dec \
ocaml-NCoq-ZArith-Zabs \
ocaml-NCoq-ZArith-Zbool \
ocaml-NCoq-ZArith-Zcompare \
ocaml-NCoq-ZArith-Zcomplements \
ocaml-NCoq-ZArith-Zdigits \
ocaml-NCoq-ZArith-Zdiv \
ocaml-NCoq-ZArith-Zeuclid \
ocaml-NCoq-ZArith-Zeven \
ocaml-NCoq-ZArith-Zgcd-alt \
ocaml-NCoq-ZArith-Zhints \
ocaml-NCoq-ZArith-Zmax \
ocaml-NCoq-ZArith-Zmin \
ocaml-NCoq-ZArith-Zminmax \
ocaml-NCoq-ZArith-Zmisc \
ocaml-NCoq-ZArith-Znat \
ocaml-NCoq-ZArith-Znumtheory \
ocaml-NCoq-ZArith-Zorder \
ocaml-NCoq-ZArith-Zpow-alt \
ocaml-NCoq-ZArith-Zpow-def \
ocaml-NCoq-ZArith-Zpow-facts \
ocaml-NCoq-ZArith-Zpower \
ocaml-NCoq-ZArith-Zquot \
ocaml-NCoq-ZArith-Zwf \
ocaml-NCoq-ZArith-auxiliary \
ocaml-NCoq-btauto-Algebra \
ocaml-NCoq-btauto-Btauto \
ocaml-NCoq-btauto-Reflect \
ocaml-NCoq-derive-Derive \
ocaml-NCoq-extraction-ExtrHaskellBasic \
ocaml-NCoq-extraction-ExtrHaskellNatInt \
ocaml-NCoq-extraction-ExtrHaskellNatInteger \
ocaml-NCoq-extraction-ExtrHaskellNatNum \
ocaml-NCoq-extraction-ExtrHaskellString \
ocaml-NCoq-extraction-ExtrHaskellZInt \
ocaml-NCoq-extraction-ExtrHaskellZInteger \
ocaml-NCoq-extraction-ExtrHaskellZNum \
ocaml-NCoq-extraction-ExtrOCamlFloats \
ocaml-NCoq-extraction-ExtrOCamlInt63 \
ocaml-NCoq-extraction-ExtrOCamlPArray \
ocaml-NCoq-extraction-ExtrOcamlBasic \
ocaml-NCoq-extraction-ExtrOcamlChar \
ocaml-NCoq-extraction-ExtrOcamlIntConv \
ocaml-NCoq-extraction-ExtrOcamlNatBigInt \
ocaml-NCoq-extraction-ExtrOcamlNatInt \
ocaml-NCoq-extraction-ExtrOcamlNativeString \
ocaml-NCoq-extraction-ExtrOcamlString \
ocaml-NCoq-extraction-ExtrOcamlZBigInt \
ocaml-NCoq-extraction-ExtrOcamlZInt \
ocaml-NCoq-extraction-Extraction \
ocaml-NCoq-funind-FunInd \
ocaml-NCoq-funind-Recdef \
ocaml-NCoq-micromega-DeclConstant \
ocaml-NCoq-micromega-Env \
ocaml-NCoq-micromega-EnvRing \
ocaml-NCoq-micromega-Fourier \
ocaml-NCoq-micromega-Fourier-util \
ocaml-NCoq-micromega-Lia \
ocaml-NCoq-micromega-Lqa \
ocaml-NCoq-micromega-Lra \
ocaml-NCoq-micromega-MExtraction \
ocaml-NCoq-micromega-OrderedRing \
ocaml-NCoq-micromega-Psatz \
ocaml-NCoq-micromega-QMicromega \
ocaml-NCoq-micromega-RMicromega \
ocaml-NCoq-micromega-Refl \
ocaml-NCoq-micromega-RingMicromega \
ocaml-NCoq-micromega-Tauto \
ocaml-NCoq-micromega-VarMap \
ocaml-NCoq-micromega-ZArith-hints \
ocaml-NCoq-micromega-ZCoeff \
ocaml-NCoq-micromega-ZMicromega \
ocaml-NCoq-micromega-Zify \
ocaml-NCoq-micromega-ZifyBool \
ocaml-NCoq-micromega-ZifyClasses \
ocaml-NCoq-micromega-ZifyComparison \
ocaml-NCoq-micromega-ZifyInst \
ocaml-NCoq-micromega-ZifyN \
ocaml-NCoq-micromega-ZifyNat \
ocaml-NCoq-micromega-ZifyPow \
ocaml-NCoq-micromega-ZifySint63 \
ocaml-NCoq-micromega-ZifyUint63 \
ocaml-NCoq-micromega-Ztac \
ocaml-NCoq-nsatz-Nsatz \
ocaml-NCoq-nsatz-NsatzTactic \
ocaml-NCoq-omega-OmegaLemmas \
ocaml-NCoq-omega-PreOmega \
ocaml-NCoq-rtauto-Bintree \
ocaml-NCoq-rtauto-Rtauto \
ocaml-NCoq-setoid-ring-Algebra-syntax \
ocaml-NCoq-setoid-ring-ArithRing \
ocaml-NCoq-setoid-ring-BinList \
ocaml-NCoq-setoid-ring-Cring \
ocaml-NCoq-setoid-ring-Field \
ocaml-NCoq-setoid-ring-Field-tac \
ocaml-NCoq-setoid-ring-Field-theory \
ocaml-NCoq-setoid-ring-InitialRing \
ocaml-NCoq-setoid-ring-Integral-domain \
ocaml-NCoq-setoid-ring-NArithRing \
ocaml-NCoq-setoid-ring-Ncring \
ocaml-NCoq-setoid-ring-Ncring-initial \
ocaml-NCoq-setoid-ring-Ncring-polynom \
ocaml-NCoq-setoid-ring-Ncring-tac \
ocaml-NCoq-setoid-ring-RealField \
ocaml-NCoq-setoid-ring-Ring \
ocaml-NCoq-setoid-ring-Ring-base \
ocaml-NCoq-setoid-ring-Ring-polynom \
ocaml-NCoq-setoid-ring-Ring-tac \
ocaml-NCoq-setoid-ring-Ring-theory \
ocaml-NCoq-setoid-ring-Rings-Q \
ocaml-NCoq-setoid-ring-Rings-R \
ocaml-NCoq-setoid-ring-Rings-Z \
ocaml-NCoq-setoid-ring-ZArithRing \
ocaml-NCoq-ssr-ssrbool \
ocaml-NCoq-ssr-ssrclasses \
ocaml-NCoq-ssr-ssreflect \
ocaml-NCoq-ssr-ssrfun \
ocaml-NCoq-ssr-ssrsetoid \
ocaml-NCoq-ssr-ssrunder \
ocaml-NCoq-ssrmatching-ssrmatching \
ocaml-NLtac2-Array \
ocaml-NLtac2-Bool \
ocaml-NLtac2-Char \
ocaml-NLtac2-Constant \
ocaml-NLtac2-Constr \
ocaml-NLtac2-Constructor \
ocaml-NLtac2-Control \
ocaml-NLtac2-Env \
ocaml-NLtac2-Evar \
ocaml-NLtac2-Float \
ocaml-NLtac2-Fresh \
ocaml-NLtac2-Ident \
ocaml-NLtac2-Ind \
ocaml-NLtac2-Init \
ocaml-NLtac2-Int \
ocaml-NLtac2-List \
ocaml-NLtac2-Ltac1 \
ocaml-NLtac2-Ltac2 \
ocaml-NLtac2-Message \
ocaml-NLtac2-Meta \
ocaml-NLtac2-Notations \
ocaml-NLtac2-Option \
ocaml-NLtac2-Pattern \
ocaml-NLtac2-Printf \
ocaml-NLtac2-Proj \
ocaml-NLtac2-Std \
ocaml-NLtac2-String \
ocaml-NLtac2-Uint63 \
ocaml-Namegen \
ocaml-Nameops \
ocaml-Names \
ocaml-Nametab \
ocaml-Nativecode \
ocaml-Nativeconv \
ocaml-Nativelambda \
ocaml-Nativelib \
ocaml-Nativelibrary \
ocaml-Nativenorm \
ocaml-Nativevalues \
ocaml-NeList \
ocaml-Notation \
ocaml-Notation-gram \
ocaml-Notation-ops \
ocaml-Notation-term \
ocaml-Notationextern \
ocaml-Notgram-ops \
ocaml-Nsatz-plugin \
ocaml-Nsatz-plugin--G-nsatz \
ocaml-Nsatz-plugin--Ideal \
ocaml-Nsatz-plugin--Nsatz \
ocaml-Nsatz-plugin--Polynom \
ocaml-Nsatz-plugin--Utile \
ocaml-NumTok \
ocaml-Number-string-notation-plugin \
ocaml-Number-string-notation-plugin--G-number-string \
ocaml-Number-string-notation-plugin--Number \
ocaml-Number-string-notation-plugin--String-notation \
ocaml-ObjFile \
ocaml-Opaqueproof \
ocaml-Opaques \
ocaml-Option \
ocaml-OrderedType \
ocaml-Parray \
ocaml-Partac \
ocaml-Pattern \
ocaml-Patternops \
ocaml-Pcoq \
ocaml-Pp \
ocaml-Pp-diff \
ocaml-Ppconstr \
ocaml-Ppextend \
ocaml-Ppred \
ocaml-Pputils \
ocaml-Ppvernac \
ocaml-Predicate \
ocaml-Prettyp \
ocaml-Pretype-errors \
ocaml-Pretyping \
ocaml-Primred \
ocaml-Printer \
ocaml-Printmod \
ocaml-Program \
ocaml-Proof \
ocaml-Proof-bullet \
ocaml-Proof-diffs \
ocaml-Proof-using \
ocaml-ProofBlockDelimiter \
ocaml-Proofview \
ocaml-Proofview-monad \
ocaml-Pvernac \
ocaml-Range \
ocaml-RecLemmas \
ocaml-Record \
ocaml-Redexpr \
ocaml-Redops \
ocaml-Reduction \
ocaml-Reductionops \
ocaml-Refine \
ocaml-Relevanceops \
ocaml-Reserve \
ocaml-RetrieveObl \
ocaml-Retroknowledge \
ocaml-Retyping \
ocaml-Rewrite \
ocaml-Richpp \
ocaml-Ring-plugin \
ocaml-Ring-plugin--G-ring \
ocaml-Ring-plugin--Ring \
ocaml-Ring-plugin--Ring-ast \
ocaml-Rtauto-plugin \
ocaml-Rtauto-plugin--G-rtauto \
ocaml-Rtauto-plugin--Proof-search \
ocaml-Rtauto-plugin--Refl-tauto \
ocaml-Rtree \
ocaml-SList \
ocaml-Safe-typing \
ocaml-Search \
ocaml-Section \
ocaml-Segmenttree \
ocaml-Serialize \
ocaml-Smartlocate \
ocaml-Sorts \
ocaml-Spawn \
ocaml-Spawned \
ocaml-Ssreflect-plugin \
ocaml-Ssreflect-plugin--Ssrast \
ocaml-Ssreflect-plugin--Ssrbwd \
ocaml-Ssreflect-plugin--Ssrcommon \
ocaml-Ssreflect-plugin--Ssrelim \
ocaml-Ssreflect-plugin--Ssrequality \
ocaml-Ssreflect-plugin--Ssrfwd \
ocaml-Ssreflect-plugin--Ssripats \
ocaml-Ssreflect-plugin--Ssrparser \
ocaml-Ssreflect-plugin--Ssrprinters \
ocaml-Ssreflect-plugin--Ssrtacticals \
ocaml-Ssreflect-plugin--Ssrvernac \
ocaml-Ssreflect-plugin--Ssrview \
ocaml-Ssrmatching-plugin \
ocaml-Ssrmatching-plugin--G-ssrmatching \
ocaml-Ssrmatching-plugin--Ssrmatching \
ocaml-Stateid \
ocaml-Stdarg \
ocaml-Stm \
ocaml-Stmargs \
ocaml-Store \
ocaml-Structures \
ocaml-Subtyping \
ocaml-Summary \
ocaml-System \
ocaml-TQueue \
ocaml-Tacmach \
ocaml-Tacred \
ocaml-Tacticals \
ocaml-Tactics \
ocaml-Tactypes \
ocaml-Tauto-plugin \
ocaml-Tauto-plugin--Tauto \
ocaml-Term \
ocaml-Term-typing \
ocaml-Terminal \
ocaml-Termops \
ocaml-Tok \
ocaml-Top-printers \
ocaml-Topfmt \
ocaml-TransparentState \
ocaml-Trie \
ocaml-Tuto0-plugin \
ocaml-Tuto0-plugin--G-tuto0 \
ocaml-Tuto0-plugin--Tuto0-main \
ocaml-Tuto1-plugin \
ocaml-Tuto1-plugin--G-tuto1 \
ocaml-Tuto1-plugin--Inspector \
ocaml-Tuto1-plugin--Simple-check \
ocaml-Tuto1-plugin--Simple-declare \
ocaml-Tuto1-plugin--Simple-print \
ocaml-Tuto2-plugin \
ocaml-Tuto2-plugin--Counter \
ocaml-Tuto2-plugin--Custom \
ocaml-Tuto2-plugin--G-tuto2 \
ocaml-Tuto2-plugin--Persistent-counter \
ocaml-Tuto3-plugin \
ocaml-Tuto3-plugin--Construction-game \
ocaml-Tuto3-plugin--G-tuto3 \
ocaml-Tuto3-plugin--Tuto-tactic \
ocaml-Type-errors \
ocaml-Typeclasses \
ocaml-Typeclasses-errors \
ocaml-Typeops \
ocaml-Typing \
ocaml-UGraph \
ocaml-UState \
ocaml-Uint63 \
ocaml-Unicode \
ocaml-Unicodetable \
ocaml-Unification \
ocaml-Unionfind \
ocaml-Univ \
ocaml-UnivGen \
ocaml-UnivMinim \
ocaml-UnivNames \
ocaml-UnivProblem \
ocaml-UnivSubst \
ocaml-Util \
ocaml-Values \
ocaml-Vars \
ocaml-Vconv \
ocaml-Vcs \
ocaml-Vernac \
ocaml-Vernac-classifier \
ocaml-Vernacentries \
ocaml-Vernacexpr \
ocaml-Vernacextend \
ocaml-Vernacinterp \
ocaml-Vernacprop \
ocaml-Vernacstate \
ocaml-Vio-checking \
ocaml-Vio-compile \
ocaml-Vm \
ocaml-Vmbytecodes \
ocaml-Vmbytegen \
ocaml-Vmemitcodes \
ocaml-Vmlambda \
ocaml-Vmopcodes \
ocaml-Vmsymtable \
ocaml-Vmvalues \
ocaml-Vnorm \
ocaml-WorkerLoop \
ocaml-WorkerPool \
ocaml-Xml-datatype \
ocaml-Xml-lexer \
ocaml-Xml-parser \
ocaml-Xml-printer \
ocaml-Xmlprotocol \
ocaml-Zify-plugin \
ocaml-Zify-plugin--G-zify \
ocaml-Zify-plugin--Zify \
ocamlx-Abbreviation \
ocamlx-Abstract \
ocamlx-AcyclicGraph \
ocamlx-Arguments-renaming \
ocamlx-Assumptions \
ocamlx-AsyncTaskQueue \
ocamlx-Attributes \
ocamlx-Auto \
ocamlx-Auto-ind-decl \
ocamlx-Autorewrite \
ocamlx-Aux-file \
ocamlx-Boot \
ocamlx-Boot--Env \
ocamlx-Boot--Path \
ocamlx-Boot--Usage \
ocamlx-Boot--Util \
ocamlx-Btauto-plugin \
ocamlx-Btauto-plugin--G-btauto \
ocamlx-Btauto-plugin--Refl-btauto \
ocamlx-Btermdn \
ocamlx-CArray \
ocamlx-CAst \
ocamlx-CClosure \
ocamlx-CDebug \
ocamlx-CEphemeron \
ocamlx-CErrors \
ocamlx-CLexer \
ocamlx-CList \
ocamlx-CMap \
ocamlx-CObj \
ocamlx-CPrimitives \
ocamlx-CProfile \
ocamlx-CSet \
ocamlx-CString \
ocamlx-CThread \
ocamlx-CUnix \
ocamlx-CWarnings \
ocamlx-Canonical \
ocamlx-Cases \
ocamlx-Cbn \
ocamlx-Cbv \
ocamlx-Cc-plugin \
ocamlx-Cc-plugin--Ccalgo \
ocamlx-Cc-plugin--Ccproof \
ocamlx-Cc-plugin--Cctac \
ocamlx-Cc-plugin--G-congruence \
ocamlx-Ccompile \
ocamlx-Class-tactics \
ocamlx-Classes \
ocamlx-Clenv \
ocamlx-Coercion \
ocamlx-Coercionops \
ocamlx-Colors \
ocamlx-ComArguments \
ocamlx-ComAssumption \
ocamlx-ComCoercion \
ocamlx-ComDefinition \
ocamlx-ComExtraDeps \
ocamlx-ComFixpoint \
ocamlx-ComHints \
ocamlx-ComInductive \
ocamlx-ComPrimitive \
ocamlx-ComProgramFixpoint \
ocamlx-ComSearch \
ocamlx-ComTactic \
ocamlx-Common-compile \
ocamlx-Constr \
ocamlx-Constr-matching \
ocamlx-Constrexpr \
ocamlx-Constrexpr-ops \
ocamlx-Constrextern \
ocamlx-Constrintern \
ocamlx-Context \
ocamlx-Contradiction \
ocamlx-Control \
ocamlx-Conv-oracle \
ocamlx-Cooking \
ocamlx-Coq-config \
ocamlx-CoqProject-file \
ocamlx-Coqargs \
ocamlx-Coqc \
ocamlx-Coqcargs \
ocamlx-Coqinit \
ocamlx-Coqlib \
ocamlx-Coqloadpath \
ocamlx-Coqloop \
ocamlx-Coqrc \
ocamlx-Coqrun \
ocamlx-Coqtop \
ocamlx-CoqworkmgrApi \
ocamlx-Core-plugins-findlib-compat \
ocamlx-DAst \
ocamlx-Dag \
ocamlx-DebugHook \
ocamlx-Declarations \
ocamlx-Declare \
ocamlx-DeclareInd \
ocamlx-DeclareScheme \
ocamlx-DeclareUctx \
ocamlx-DeclareUniv \
ocamlx-Declaremods \
ocamlx-Declareops \
ocamlx-Decls \
ocamlx-Deprecation \
ocamlx-Derive-plugin \
ocamlx-Derive-plugin--Derive \
ocamlx-Derive-plugin--G-derive \
ocamlx-Detyping \
ocamlx-Diff2 \
ocamlx-Discharge \
ocamlx-Dn \
ocamlx-Document \
ocamlx-Dumpglob \
ocamlx-Dyn \
ocamlx-EConstr \
ocamlx-Eauto \
ocamlx-Egramcoq \
ocamlx-Egramml \
ocamlx-Elim \
ocamlx-Elimschemes \
ocamlx-Entries \
ocamlx-Envars \
ocamlx-Environ \
ocamlx-Eqdecide \
ocamlx-Eqschemes \
ocamlx-Equality \
ocamlx-Esubst \
ocamlx-Evar \
ocamlx-Evar-kinds \
ocamlx-Evar-tactics \
ocamlx-Evarconv \
ocamlx-Evardefine \
ocamlx-Evarsolve \
ocamlx-Evarutil \
ocamlx-Evd \
ocamlx-Exninfo \
ocamlx-Extend \
ocamlx-Extraction-plugin \
ocamlx-Extraction-plugin--Common \
ocamlx-Extraction-plugin--Extract-env \
ocamlx-Extraction-plugin--Extraction \
ocamlx-Extraction-plugin--G-extraction \
ocamlx-Extraction-plugin--Haskell \
ocamlx-Extraction-plugin--Json \
ocamlx-Extraction-plugin--Miniml \
ocamlx-Extraction-plugin--Mlutil \
ocamlx-Extraction-plugin--Modutil \
ocamlx-Extraction-plugin--Ocaml \
ocamlx-Extraction-plugin--Scheme \
ocamlx-Extraction-plugin--Table \
ocamlx-Feedback \
ocamlx-Find-subterm \
ocamlx-Firstorder-plugin \
ocamlx-Firstorder-plugin--Formula \
ocamlx-Firstorder-plugin--G-ground \
ocamlx-Firstorder-plugin--Ground \
ocamlx-Firstorder-plugin--Instances \
ocamlx-Firstorder-plugin--Rules \
ocamlx-Firstorder-plugin--Sequent \
ocamlx-Firstorder-plugin--Unify \
ocamlx-Flags \
ocamlx-Float64 \
ocamlx-Float64-common \
ocamlx-Ftactic \
ocamlx-Funind-plugin \
ocamlx-Funind-plugin--Functional-principles-proofs \
ocamlx-Funind-plugin--Functional-principles-types \
ocamlx-Funind-plugin--G-indfun \
ocamlx-Funind-plugin--Gen-principle \
ocamlx-Funind-plugin--Glob-term-to-relation \
ocamlx-Funind-plugin--Glob-termops \
ocamlx-Funind-plugin--Indfun \
ocamlx-Funind-plugin--Indfun-common \
ocamlx-Funind-plugin--Invfun \
ocamlx-Funind-plugin--Recdef \
ocamlx-Future \
ocamlx-G-constr \
ocamlx-G-prim \
ocamlx-G-proofs \
ocamlx-G-toplevel \
ocamlx-G-vernac \
ocamlx-Genarg \
ocamlx-Genintern \
ocamlx-Geninterp \
ocamlx-Genlambda \
ocamlx-Genprint \
ocamlx-Genredexpr \
ocamlx-Glob-ops \
ocamlx-Glob-term \
ocamlx-GlobEnv \
ocamlx-Global \
ocamlx-Globnames \
ocamlx-Goal-select \
ocamlx-Goptions \
ocamlx-Gramlib \
ocamlx-Gramlib--Gramext \
ocamlx-Gramlib--Grammar \
ocamlx-Gramlib--LStream \
ocamlx-Gramlib--Plexing \
ocamlx-Gramlib--Stream \
ocamlx-HMap \
ocamlx-Hashcons \
ocamlx-Hashset \
ocamlx-Heads \
ocamlx-Heap \
ocamlx-Himsg \
ocamlx-Hints \
ocamlx-Hipattern \
ocamlx-Hook \
ocamlx-IStream \
ocamlx-Impargs \
ocamlx-Implicit-quantifiers \
ocamlx-Ind-tables \
ocamlx-IndTyping \
ocamlx-Indrec \
ocamlx-Indschemes \
ocamlx-Indtypes \
ocamlx-Inductive \
ocamlx-Inductiveops \
ocamlx-InferCumulativity \
ocamlx-Int \
ocamlx-Interface \
ocamlx-Inv \
ocamlx-Keys \
ocamlx-Lib \
ocamlx-Libnames \
ocamlx-Libobject \
ocamlx-Library \
ocamlx-Load \
ocamlx-Loadpath \
ocamlx-Loc \
ocamlx-Locality \
ocamlx-Locus \
ocamlx-Locusops \
ocamlx-Logic \
ocamlx-Logic-monad \
ocamlx-Ltac-plugin \
ocamlx-Ltac-plugin--ComRewrite \
ocamlx-Ltac-plugin--Coretactics \
ocamlx-Ltac-plugin--Extraargs \
ocamlx-Ltac-plugin--Extratactics \
ocamlx-Ltac-plugin--G-auto \
ocamlx-Ltac-plugin--G-class \
ocamlx-Ltac-plugin--G-eqdecide \
ocamlx-Ltac-plugin--G-ltac \
ocamlx-Ltac-plugin--G-obligations \
ocamlx-Ltac-plugin--G-rewrite \
ocamlx-Ltac-plugin--G-tactic \
ocamlx-Ltac-plugin--Internals \
ocamlx-Ltac-plugin--Leminv \
ocamlx-Ltac-plugin--Pltac \
ocamlx-Ltac-plugin--Pptactic \
ocamlx-Ltac-plugin--Profile-ltac \
ocamlx-Ltac-plugin--Profile-ltac-tactics \
ocamlx-Ltac-plugin--Tacarg \
ocamlx-Ltac-plugin--Taccoerce \
ocamlx-Ltac-plugin--Tacentries \
ocamlx-Ltac-plugin--Tacenv \
ocamlx-Ltac-plugin--Tacexpr \
ocamlx-Ltac-plugin--Tacintern \
ocamlx-Ltac-plugin--Tacinterp \
ocamlx-Ltac-plugin--Tacsubst \
ocamlx-Ltac-plugin--Tactic-debug \
ocamlx-Ltac-plugin--Tactic-matching \
ocamlx-Ltac-plugin--Tactic-option \
ocamlx-Ltac-pretype \
ocamlx-Ltac2-plugin \
ocamlx-Ltac2-plugin--G-ltac2 \
ocamlx-Ltac2-plugin--Tac2core \
ocamlx-Ltac2-plugin--Tac2dyn \
ocamlx-Ltac2-plugin--Tac2entries \
ocamlx-Ltac2-plugin--Tac2env \
ocamlx-Ltac2-plugin--Tac2extffi \
ocamlx-Ltac2-plugin--Tac2ffi \
ocamlx-Ltac2-plugin--Tac2intern \
ocamlx-Ltac2-plugin--Tac2interp \
ocamlx-Ltac2-plugin--Tac2match \
ocamlx-Ltac2-plugin--Tac2print \
ocamlx-Ltac2-plugin--Tac2quote \
ocamlx-Ltac2-plugin--Tac2stdlib \
ocamlx-Ltac2-plugin--Tac2tactics \
ocamlx-Ltac2-plugin--Tac2typing-env \
ocamlx-Metasyntax \
ocamlx-Micromega-plugin \
ocamlx-Micromega-plugin--Certificate \
ocamlx-Micromega-plugin--Coq-micromega \
ocamlx-Micromega-plugin--G-micromega \
ocamlx-Micromega-plugin--Itv \
ocamlx-Micromega-plugin--Linsolve \
ocamlx-Micromega-plugin--Micromega \
ocamlx-Micromega-plugin--Mutils \
ocamlx-Micromega-plugin--NumCompat \
ocamlx-Micromega-plugin--Persistent-cache \
ocamlx-Micromega-plugin--Polynomial \
ocamlx-Micromega-plugin--Simplex \
ocamlx-Micromega-plugin--Sos \
ocamlx-Micromega-plugin--Sos-lib \
ocamlx-Micromega-plugin--Sos-types \
ocamlx-Micromega-plugin--Vect \
ocamlx-Miscprint \
ocamlx-Mltop \
ocamlx-Mod-subst \
ocamlx-Mod-typing \
ocamlx-Modintern \
ocamlx-Modops \
ocamlx-Monad \
ocamlx-Namegen \
ocamlx-Nameops \
ocamlx-Names \
ocamlx-Nametab \
ocamlx-Nativecode \
ocamlx-Nativeconv \
ocamlx-Nativelambda \
ocamlx-Nativelib \
ocamlx-Nativelibrary \
ocamlx-Nativenorm \
ocamlx-Nativevalues \
ocamlx-NeList \
ocamlx-Notation \
ocamlx-Notation-gram \
ocamlx-Notation-ops \
ocamlx-Notation-term \
ocamlx-Notationextern \
ocamlx-Notgram-ops \
ocamlx-Nsatz-plugin \
ocamlx-Nsatz-plugin--G-nsatz \
ocamlx-Nsatz-plugin--Ideal \
ocamlx-Nsatz-plugin--Nsatz \
ocamlx-Nsatz-plugin--Polynom \
ocamlx-Nsatz-plugin--Utile \
ocamlx-NumTok \
ocamlx-Number-string-notation-plugin \
ocamlx-Number-string-notation-plugin--G-number-string \
ocamlx-Number-string-notation-plugin--Number \
ocamlx-Number-string-notation-plugin--String-notation \
ocamlx-ObjFile \
ocamlx-Opaqueproof \
ocamlx-Opaques \
ocamlx-Option \
ocamlx-OrderedType \
ocamlx-Parray \
ocamlx-Partac \
ocamlx-Pattern \
ocamlx-Patternops \
ocamlx-Pcoq \
ocamlx-Pp \
ocamlx-Pp-diff \
ocamlx-Ppconstr \
ocamlx-Ppextend \
ocamlx-Ppred \
ocamlx-Pputils \
ocamlx-Ppvernac \
ocamlx-Predicate \
ocamlx-Prettyp \
ocamlx-Pretype-errors \
ocamlx-Pretyping \
ocamlx-Primred \
ocamlx-Printer \
ocamlx-Printmod \
ocamlx-Program \
ocamlx-Proof \
ocamlx-Proof-bullet \
ocamlx-Proof-diffs \
ocamlx-Proof-using \
ocamlx-ProofBlockDelimiter \
ocamlx-Proofview \
ocamlx-Proofview-monad \
ocamlx-Pvernac \
ocamlx-Range \
ocamlx-RecLemmas \
ocamlx-Record \
ocamlx-Redexpr \
ocamlx-Redops \
ocamlx-Reduction \
ocamlx-Reductionops \
ocamlx-Refine \
ocamlx-Relevanceops \
ocamlx-Reserve \
ocamlx-RetrieveObl \
ocamlx-Retroknowledge \
ocamlx-Retyping \
ocamlx-Rewrite \
ocamlx-Richpp \
ocamlx-Ring-plugin \
ocamlx-Ring-plugin--G-ring \
ocamlx-Ring-plugin--Ring \
ocamlx-Ring-plugin--Ring-ast \
ocamlx-Rtauto-plugin \
ocamlx-Rtauto-plugin--G-rtauto \
ocamlx-Rtauto-plugin--Proof-search \
ocamlx-Rtauto-plugin--Refl-tauto \
ocamlx-Rtree \
ocamlx-SList \
ocamlx-Safe-typing \
ocamlx-Search \
ocamlx-Section \
ocamlx-Segmenttree \
ocamlx-Serialize \
ocamlx-Smartlocate \
ocamlx-Sorts \
ocamlx-Spawn \
ocamlx-Spawned \
ocamlx-Ssreflect-plugin \
ocamlx-Ssreflect-plugin--Ssrbwd \
ocamlx-Ssreflect-plugin--Ssrcommon \
ocamlx-Ssreflect-plugin--Ssrelim \
ocamlx-Ssreflect-plugin--Ssrequality \
ocamlx-Ssreflect-plugin--Ssrfwd \
ocamlx-Ssreflect-plugin--Ssripats \
ocamlx-Ssreflect-plugin--Ssrparser \
ocamlx-Ssreflect-plugin--Ssrprinters \
ocamlx-Ssreflect-plugin--Ssrtacticals \
ocamlx-Ssreflect-plugin--Ssrvernac \
ocamlx-Ssreflect-plugin--Ssrview \
ocamlx-Ssrmatching-plugin \
ocamlx-Ssrmatching-plugin--G-ssrmatching \
ocamlx-Ssrmatching-plugin--Ssrmatching \
ocamlx-Stateid \
ocamlx-Stdarg \
ocamlx-Stm \
ocamlx-Stmargs \
ocamlx-Store \
ocamlx-Structures \
ocamlx-Subtyping \
ocamlx-Summary \
ocamlx-System \
ocamlx-TQueue \
ocamlx-Tacmach \
ocamlx-Tacred \
ocamlx-Tacticals \
ocamlx-Tactics \
ocamlx-Tactypes \
ocamlx-Tauto-plugin \
ocamlx-Tauto-plugin--Tauto \
ocamlx-Term \
ocamlx-Term-typing \
ocamlx-Terminal \
ocamlx-Termops \
ocamlx-Tok \
ocamlx-Top-printers \
ocamlx-Topfmt \
ocamlx-TransparentState \
ocamlx-Trie \
ocamlx-Tuto0-plugin \
ocamlx-Tuto0-plugin--G-tuto0 \
ocamlx-Tuto0-plugin--Tuto0-main \
ocamlx-Tuto1-plugin \
ocamlx-Tuto1-plugin--G-tuto1 \
ocamlx-Tuto1-plugin--Inspector \
ocamlx-Tuto1-plugin--Simple-check \
ocamlx-Tuto1-plugin--Simple-declare \
ocamlx-Tuto1-plugin--Simple-print \
ocamlx-Tuto2-plugin \
ocamlx-Tuto2-plugin--Counter \
ocamlx-Tuto2-plugin--Custom \
ocamlx-Tuto2-plugin--G-tuto2 \
ocamlx-Tuto2-plugin--Persistent-counter \
ocamlx-Tuto3-plugin \
ocamlx-Tuto3-plugin--Construction-game \
ocamlx-Tuto3-plugin--G-tuto3 \
ocamlx-Tuto3-plugin--Tuto-tactic \
ocamlx-Type-errors \
ocamlx-Typeclasses \
ocamlx-Typeclasses-errors \
ocamlx-Typeops \
ocamlx-Typing \
ocamlx-UGraph \
ocamlx-UState \
ocamlx-Uint63 \
ocamlx-Unicode \
ocamlx-Unicodetable \
ocamlx-Unification \
ocamlx-Unionfind \
ocamlx-Univ \
ocamlx-UnivGen \
ocamlx-UnivMinim \
ocamlx-UnivNames \
ocamlx-UnivProblem \
ocamlx-UnivSubst \
ocamlx-Util \
ocamlx-Vars \
ocamlx-Vconv \
ocamlx-Vcs \
ocamlx-Vernac \
ocamlx-Vernac-classifier \
ocamlx-Vernacentries \
ocamlx-Vernacexpr \
ocamlx-Vernacextend \
ocamlx-Vernacinterp \
ocamlx-Vernacprop \
ocamlx-Vernacstate \
ocamlx-Vio-checking \
ocamlx-Vio-compile \
ocamlx-Vm \
ocamlx-Vmbytecodes \
ocamlx-Vmbytegen \
ocamlx-Vmemitcodes \
ocamlx-Vmlambda \
ocamlx-Vmopcodes \
ocamlx-Vmsymtable \
ocamlx-Vmvalues \
ocamlx-Vnorm \
ocamlx-WorkerLoop \
ocamlx-WorkerPool \
ocamlx-Xml-lexer \
ocamlx-Xml-parser \
ocamlx-Xml-printer \
ocamlx-Xmlprotocol \
ocamlx-Zify-plugin \
ocamlx-Zify-plugin--G-zify \
ocamlx-Zify-plugin--Zify"

RDEPENDS:${PN} += "coq \
ocaml \
ocaml-Big-int-Z \
ocaml-CamlinternalFormatBasics \
ocaml-CamlinternalLazy \
ocaml-CamlinternalMod \
ocaml-CamlinternalOO \
ocaml-Condition \
ocaml-Dynlink \
ocaml-Findlib \
ocaml-Fl-dynload \
ocaml-Fl-metascanner \
ocaml-Fl-metatoken \
ocaml-Fl-package-base \
ocaml-Mutex \
ocaml-Q \
ocaml-Stdlib \
ocaml-Stdlib--Array \
ocaml-Stdlib--Bigarray \
ocaml-Stdlib--Buffer \
ocaml-Stdlib--Bytes \
ocaml-Stdlib--Char \
ocaml-Stdlib--Complex \
ocaml-Stdlib--Digest \
ocaml-Stdlib--Either \
ocaml-Stdlib--Ephemeron \
ocaml-Stdlib--Filename \
ocaml-Stdlib--Format \
ocaml-Stdlib--Fun \
ocaml-Stdlib--Gc \
ocaml-Stdlib--Hashtbl \
ocaml-Stdlib--Int32 \
ocaml-Stdlib--Int64 \
ocaml-Stdlib--Lazy \
ocaml-Stdlib--Lexing \
ocaml-Stdlib--List \
ocaml-Stdlib--Map \
ocaml-Stdlib--Marshal \
ocaml-Stdlib--Nativeint \
ocaml-Stdlib--Obj \
ocaml-Stdlib--Printexc \
ocaml-Stdlib--Printf \
ocaml-Stdlib--Queue \
ocaml-Stdlib--Random \
ocaml-Stdlib--Scanf \
ocaml-Stdlib--Seq \
ocaml-Stdlib--Set \
ocaml-Stdlib--Stack \
ocaml-Stdlib--String \
ocaml-Stdlib--Sys \
ocaml-Stdlib--Uchar \
ocaml-Stdlib--Weak \
ocaml-Str \
ocaml-Thread \
ocaml-Unix \
ocaml-Z \
ocamlx-Big-int-Z \
ocamlx-CamlinternalLazy \
ocamlx-CamlinternalMod \
ocamlx-CamlinternalOO \
ocamlx-Condition \
ocamlx-Dynlink \
ocamlx-Mutex \
ocamlx-Q \
ocamlx-Stdlib \
ocamlx-Stdlib--Array \
ocamlx-Stdlib--Buffer \
ocamlx-Stdlib--Bytes \
ocamlx-Stdlib--Char \
ocamlx-Stdlib--Digest \
ocamlx-Stdlib--Ephemeron \
ocamlx-Stdlib--Filename \
ocamlx-Stdlib--Format \
ocamlx-Stdlib--Fun \
ocamlx-Stdlib--Gc \
ocamlx-Stdlib--Hashtbl \
ocamlx-Stdlib--Int32 \
ocamlx-Stdlib--Int64 \
ocamlx-Stdlib--Lazy \
ocamlx-Stdlib--Lexing \
ocamlx-Stdlib--List \
ocamlx-Stdlib--Map \
ocamlx-Stdlib--Marshal \
ocamlx-Stdlib--Obj \
ocamlx-Stdlib--Printexc \
ocamlx-Stdlib--Printf \
ocamlx-Stdlib--Queue \
ocamlx-Stdlib--Random \
ocamlx-Stdlib--Scanf \
ocamlx-Stdlib--Set \
ocamlx-Stdlib--Stack \
ocamlx-Stdlib--String \
ocamlx-Stdlib--Sys \
ocamlx-Stdlib--Weak \
ocamlx-Str \
ocamlx-Thread \
ocamlx-Unix \
ocamlx-Z"

inherit rpm
