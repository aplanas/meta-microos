SUMMARY = "Development files for ocaml-ctypes"
DESCRIPTION = "The ocaml-ctypes-devel package contains libraries and signature files for \
developing applications that use ocaml-ctypes."
LICENSE = "ISC"

PV = "0.20.1"

RPM_NAME = "ocaml-ctypes-devel-0.20.1-2.1.aarch64.rpm"
RPM_HASH = "dcfcf6a568e3c71abe01289b0c6af38f119c3076c3ad47aee207a838b492a6b2b6c825f45d107dce617f98ad531405681fe53923d2732829b936bb086e8def0e"

RPROVIDES:${PN} += "ocaml(ComplexL) \
ocaml(Cstubs) \
ocaml(Cstubs_analysis) \
ocaml(Cstubs_c_language) \
ocaml(Cstubs_emit_c) \
ocaml(Cstubs_errors) \
ocaml(Cstubs_generate_c) \
ocaml(Cstubs_generate_ml) \
ocaml(Cstubs_internals) \
ocaml(Cstubs_inverted) \
ocaml(Cstubs_public_name) \
ocaml(Cstubs_structs) \
ocaml(Ctypes) \
ocaml(Ctypes_bigarray) \
ocaml(Ctypes_bigarray_stubs) \
ocaml(Ctypes_closure_properties) \
ocaml(Ctypes_coerce) \
ocaml(Ctypes_ffi) \
ocaml(Ctypes_ffi_stubs) \
ocaml(Ctypes_foreign_basis) \
ocaml(Ctypes_foreign_threaded_stubs) \
ocaml(Ctypes_memory) \
ocaml(Ctypes_memory_stubs) \
ocaml(Ctypes_path) \
ocaml(Ctypes_primitive_types) \
ocaml(Ctypes_primitives) \
ocaml(Ctypes_ptr) \
ocaml(Ctypes_roots_stubs) \
ocaml(Ctypes_static) \
ocaml(Ctypes_std_view_stubs) \
ocaml(Ctypes_std_views) \
ocaml(Ctypes_structs) \
ocaml(Ctypes_structs_computed) \
ocaml(Ctypes_top) \
ocaml(Ctypes_top__Ctypes_printers) \
ocaml(Ctypes_top__Install_ctypes_printers) \
ocaml(Ctypes_type_printing) \
ocaml(Ctypes_types) \
ocaml(Ctypes_value_printing) \
ocaml(Ctypes_value_printing_stubs) \
ocaml(Ctypes_weak_ref) \
ocaml(Dl) \
ocaml(Foreign) \
ocaml(LDouble) \
ocaml(Libffi_abi) \
ocaml(PosixTypes) \
ocaml-ctypes-devel \
ocaml-ctypes-devel(aarch-64) \
ocamlfind(ctypes) \
ocamlfind(ctypes-foreign) \
ocamlfind(ctypes.stubs) \
ocamlfind(ctypes.top) \
ocamlx(ComplexL) \
ocamlx(Cstubs) \
ocamlx(Cstubs_analysis) \
ocamlx(Cstubs_c_language) \
ocamlx(Cstubs_emit_c) \
ocamlx(Cstubs_errors) \
ocamlx(Cstubs_generate_c) \
ocamlx(Cstubs_generate_ml) \
ocamlx(Cstubs_internals) \
ocamlx(Cstubs_inverted) \
ocamlx(Cstubs_public_name) \
ocamlx(Cstubs_structs) \
ocamlx(Ctypes) \
ocamlx(Ctypes_bigarray) \
ocamlx(Ctypes_bigarray_stubs) \
ocamlx(Ctypes_closure_properties) \
ocamlx(Ctypes_coerce) \
ocamlx(Ctypes_ffi) \
ocamlx(Ctypes_ffi_stubs) \
ocamlx(Ctypes_foreign_basis) \
ocamlx(Ctypes_foreign_threaded_stubs) \
ocamlx(Ctypes_memory) \
ocamlx(Ctypes_memory_stubs) \
ocamlx(Ctypes_path) \
ocamlx(Ctypes_primitive_types) \
ocamlx(Ctypes_primitives) \
ocamlx(Ctypes_ptr) \
ocamlx(Ctypes_roots_stubs) \
ocamlx(Ctypes_static) \
ocamlx(Ctypes_std_view_stubs) \
ocamlx(Ctypes_std_views) \
ocamlx(Ctypes_structs) \
ocamlx(Ctypes_structs_computed) \
ocamlx(Ctypes_top) \
ocamlx(Ctypes_top__Ctypes_printers) \
ocamlx(Ctypes_top__Install_ctypes_printers) \
ocamlx(Ctypes_type_printing) \
ocamlx(Ctypes_value_printing) \
ocamlx(Ctypes_value_printing_stubs) \
ocamlx(Ctypes_weak_ref) \
ocamlx(Dl) \
ocamlx(Foreign) \
ocamlx(LDouble) \
ocamlx(Libffi_abi) \
ocamlx(PosixTypes)"
RDEPENDS:${PN} += "libc.so.6(GLIBC_2.34)(64bit) \
libffi.so.8()(64bit) \
libffi.so.8(LIBFFI_BASE_8.0)(64bit) \
libffi.so.8(LIBFFI_CLOSURE_8.0)(64bit) \
ocaml(Asttypes) \
ocaml(Bigarray_compat) \
ocaml(Build_path_prefix_map) \
ocaml(CamlinternalFormatBasics) \
ocaml(CamlinternalLazy) \
ocaml(CamlinternalOO) \
ocaml(Cmi_format) \
ocaml(Env) \
ocaml(Ident) \
ocaml(Identifiable) \
ocaml(Load_path) \
ocaml(Location) \
ocaml(Longident) \
ocaml(Misc) \
ocaml(Mutex) \
ocaml(Outcometree) \
ocaml(Parsetree) \
ocaml(Path) \
ocaml(Primitive) \
ocaml(Shape) \
ocaml(Signed) \
ocaml(Stdlib) \
ocaml(Stdlib__Array) \
ocaml(Stdlib__Bigarray) \
ocaml(Stdlib__Buffer) \
ocaml(Stdlib__Bytes) \
ocaml(Stdlib__Callback) \
ocaml(Stdlib__Complex) \
ocaml(Stdlib__Digest) \
ocaml(Stdlib__Either) \
ocaml(Stdlib__Format) \
ocaml(Stdlib__Gc) \
ocaml(Stdlib__Hashtbl) \
ocaml(Stdlib__Int32) \
ocaml(Stdlib__Int64) \
ocaml(Stdlib__Lazy) \
ocaml(Stdlib__Lexing) \
ocaml(Stdlib__List) \
ocaml(Stdlib__ListLabels) \
ocaml(Stdlib__Map) \
ocaml(Stdlib__Nativeint) \
ocaml(Stdlib__Obj) \
ocaml(Stdlib__Oo) \
ocaml(Stdlib__Printexc) \
ocaml(Stdlib__Printf) \
ocaml(Stdlib__Seq) \
ocaml(Stdlib__Set) \
ocaml(Stdlib__String) \
ocaml(Stdlib__Uchar) \
ocaml(Stdlib__Weak) \
ocaml(Str) \
ocaml(Subst) \
ocaml(Thread) \
ocaml(Toploop) \
ocaml(Type_immediacy) \
ocaml(Types) \
ocaml(Unix) \
ocaml(Unsigned) \
ocaml(Warnings) \
ocaml-ctypes \
ocamlfind(bigarray-compat) \
ocamlfind(bytes) \
ocamlfind(compiler-libs) \
ocamlfind(integers) \
ocamlfind(str) \
ocamlfind(threads) \
ocamlx(Bigarray_compat) \
ocamlx(CamlinternalOO) \
ocamlx(Mutex) \
ocamlx(Signed) \
ocamlx(Stdlib) \
ocamlx(Stdlib__Array) \
ocamlx(Stdlib__Bigarray) \
ocamlx(Stdlib__Bytes) \
ocamlx(Stdlib__Callback) \
ocamlx(Stdlib__Format) \
ocamlx(Stdlib__Gc) \
ocamlx(Stdlib__Hashtbl) \
ocamlx(Stdlib__Int64) \
ocamlx(Stdlib__Lexing) \
ocamlx(Stdlib__List) \
ocamlx(Stdlib__ListLabels) \
ocamlx(Stdlib__Nativeint) \
ocamlx(Stdlib__Printexc) \
ocamlx(Stdlib__Printf) \
ocamlx(Stdlib__String) \
ocamlx(Stdlib__Weak) \
ocamlx(Str) \
ocamlx(Thread) \
ocamlx(Toploop) \
ocamlx(Unsigned)"

inherit rpm
