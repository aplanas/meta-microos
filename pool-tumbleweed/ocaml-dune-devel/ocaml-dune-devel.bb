SUMMARY = "Various libraries"
DESCRIPTION = "This package provides various libraries: \
chrome-trace \
dune-action-plugin \
dune-build-info \
dune-configurator \
dune-glob \
dune-private-libs \
dune-rpc \
dune-site \
dyn \
ocamlc-loc \
ordering \
stdune \
xdg"
LICENSE = "MIT"

PV = "3.7.1"

RPM_NAME = "ocaml-dune-devel-3.7.1-1.1.aarch64.rpm"
RPM_HASH = "28b4aefb90faba43cd9d34278173d640bf81b18b781a6e57d690274be5b38e24e48876ec63b94030d64181b1a01eab9594d86248b8c38375825ad9a1ac88409c"

RPROVIDES:${PN} += "ocaml(Build_info) \
ocaml(Build_info__) \
ocaml(Build_info__Build_info_data) \
ocaml(Chrome_trace) \
ocaml(Configurator) \
ocaml(Configurator__) \
ocaml(Configurator__Dune_lang) \
ocaml(Configurator__Extract_obj) \
ocaml(Configurator__Import) \
ocaml(Configurator__Ocaml_config) \
ocaml(Configurator__V1) \
ocaml(Csexp) \
ocaml(Dune_action_plugin) \
ocaml(Dune_action_plugin__) \
ocaml(Dune_action_plugin__Import) \
ocaml(Dune_action_plugin__Path) \
ocaml(Dune_action_plugin__Protocol) \
ocaml(Dune_action_plugin__Sexpable_intf) \
ocaml(Dune_filesystem_stubs) \
ocaml(Dune_glob) \
ocaml(Dune_glob__) \
ocaml(Dune_glob__Glob) \
ocaml(Dune_glob__Lexer) \
ocaml(Dune_meta_parser) \
ocaml(Dune_meta_parser__Meta_lexer) \
ocaml(Dune_meta_parser__Meta_parser) \
ocaml(Dune_re) \
ocaml(Dune_re__) \
ocaml(Dune_re__Automata) \
ocaml(Dune_re__Category) \
ocaml(Dune_re__Color_map) \
ocaml(Dune_re__Core) \
ocaml(Dune_re__Cset) \
ocaml(Dune_re__Emacs) \
ocaml(Dune_re__Fmt) \
ocaml(Dune_re__Glob) \
ocaml(Dune_re__Group) \
ocaml(Dune_re__Pcre) \
ocaml(Dune_re__Perl) \
ocaml(Dune_re__Pmark) \
ocaml(Dune_re__Posix) \
ocaml(Dune_re__Re) \
ocaml(Dune_re__Str) \
ocaml(Dune_rpc) \
ocaml(Dune_rpc_private) \
ocaml(Dune_rpc_private__) \
ocaml(Dune_rpc_private__Conv) \
ocaml(Dune_rpc_private__Dbus_address) \
ocaml(Dune_rpc_private__Exported_types) \
ocaml(Dune_rpc_private__Fiber_intf) \
ocaml(Dune_rpc_private__Import) \
ocaml(Dune_rpc_private__Menu) \
ocaml(Dune_rpc_private__Procedures) \
ocaml(Dune_rpc_private__Registry) \
ocaml(Dune_rpc_private__Sub) \
ocaml(Dune_rpc_private__Types) \
ocaml(Dune_rpc_private__Versioned) \
ocaml(Dune_rpc_private__Where) \
ocaml(Dune_section) \
ocaml(Dune_site) \
ocaml(Dune_site__) \
ocaml(Dune_site__Dune_site_data) \
ocaml(Dune_site__Helpers) \
ocaml(Dune_site_plugins) \
ocaml(Dune_site_plugins__) \
ocaml(Dune_site_plugins__Dune_site_plugins_data) \
ocaml(Dune_site_plugins__Meta_parser) \
ocaml(Dune_site_plugins__Plugins) \
ocaml(Dune_site_private) \
ocaml(Dyn) \
ocaml(Ocaml_config) \
ocaml(Ocamlc_loc) \
ocaml(Ocamlc_loc__) \
ocaml(Ocamlc_loc__Lexer) \
ocaml(Ordering) \
ocaml(Pp) \
ocaml(Stdune) \
ocaml(Stdune__) \
ocaml(Stdune__Ansi_color) \
ocaml(Stdune__Appendable_list) \
ocaml(Stdune__Applicative) \
ocaml(Stdune__Applicative_intf) \
ocaml(Stdune__Array) \
ocaml(Stdune__Bin) \
ocaml(Stdune__Bool) \
ocaml(Stdune__Bytes) \
ocaml(Stdune__Bytes_unit) \
ocaml(Stdune__Caller_id) \
ocaml(Stdune__Char) \
ocaml(Stdune__Code_error) \
ocaml(Stdune__Comparable) \
ocaml(Stdune__Comparable_intf) \
ocaml(Stdune__Comparator) \
ocaml(Stdune__Either) \
ocaml(Stdune__Env) \
ocaml(Stdune__Env_path) \
ocaml(Stdune__Escape) \
ocaml(Stdune__Exn) \
ocaml(Stdune__Exn_with_backtrace) \
ocaml(Stdune__Fdecl) \
ocaml(Stdune__Filename) \
ocaml(Stdune__Float) \
ocaml(Stdune__Fpath) \
ocaml(Stdune__Hashable) \
ocaml(Stdune__Hashtbl) \
ocaml(Stdune__Hashtbl_intf) \
ocaml(Stdune__Id) \
ocaml(Stdune__Int) \
ocaml(Stdune__Io) \
ocaml(Stdune__Io_intf) \
ocaml(Stdune__Lexbuf) \
ocaml(Stdune__List) \
ocaml(Stdune__Loc) \
ocaml(Stdune__Loc0) \
ocaml(Stdune__Map) \
ocaml(Stdune__Map_intf) \
ocaml(Stdune__Monad) \
ocaml(Stdune__Monad_intf) \
ocaml(Stdune__Monoid) \
ocaml(Stdune__Monoid_intf) \
ocaml(Stdune__Nonempty_list) \
ocaml(Stdune__Nothing) \
ocaml(Stdune__Option) \
ocaml(Stdune__Or_exn) \
ocaml(Stdune__Path) \
ocaml(Stdune__Path_intf) \
ocaml(Stdune__Pid) \
ocaml(Stdune__Poly) \
ocaml(Stdune__Predicate) \
ocaml(Stdune__Proc) \
ocaml(Stdune__Queue) \
ocaml(Stdune__Result) \
ocaml(Stdune__Scanf) \
ocaml(Stdune__Seq) \
ocaml(Stdune__Set) \
ocaml(Stdune__Set_intf) \
ocaml(Stdune__Sexp) \
ocaml(Stdune__Signal) \
ocaml(Stdune__Staged) \
ocaml(Stdune__State) \
ocaml(Stdune__String) \
ocaml(Stdune__String_split) \
ocaml(Stdune__Sys) \
ocaml(Stdune__Table) \
ocaml(Stdune__Temp) \
ocaml(Stdune__Top_closure) \
ocaml(Stdune__Top_closure_intf) \
ocaml(Stdune__Tuple) \
ocaml(Stdune__Type_eq) \
ocaml(Stdune__Unit) \
ocaml(Stdune__Univ_map) \
ocaml(Stdune__Univ_map_intf) \
ocaml(Stdune__User_error) \
ocaml(Stdune__User_message) \
ocaml(Stdune__User_warning) \
ocaml(Xdg) \
ocaml-dune-configurator \
ocaml-dune-configurator-devel \
ocaml-dune-devel \
ocaml-dune-devel(aarch-64) \
ocamlfind(chrome-trace) \
ocamlfind(dune) \
ocamlfind(dune-action-plugin) \
ocamlfind(dune-build-info) \
ocamlfind(dune-configurator) \
ocamlfind(dune-glob) \
ocamlfind(dune-private-libs) \
ocamlfind(dune-private-libs.dune-section) \
ocamlfind(dune-private-libs.dune_re) \
ocamlfind(dune-private-libs.meta_parser) \
ocamlfind(dune-private-libs.ocaml-config) \
ocamlfind(dune-rpc) \
ocamlfind(dune-rpc.private) \
ocamlfind(dune-site) \
ocamlfind(dune-site.plugins) \
ocamlfind(dune-site.private) \
ocamlfind(dune.configurator) \
ocamlfind(dyn) \
ocamlfind(dyn.pp) \
ocamlfind(ocamlc-loc) \
ocamlfind(ordering) \
ocamlfind(stdune) \
ocamlfind(stdune.csexp) \
ocamlfind(stdune.filesystem_stubs) \
ocamlfind(xdg) \
ocamlx(Build_info) \
ocamlx(Build_info__) \
ocamlx(Chrome_trace) \
ocamlx(Configurator) \
ocamlx(Configurator__) \
ocamlx(Configurator__Dune_lang) \
ocamlx(Configurator__Extract_obj) \
ocamlx(Configurator__Import) \
ocamlx(Configurator__Ocaml_config) \
ocamlx(Configurator__V1) \
ocamlx(Csexp) \
ocamlx(Dune_action_plugin) \
ocamlx(Dune_action_plugin__) \
ocamlx(Dune_action_plugin__Import) \
ocamlx(Dune_action_plugin__Path) \
ocamlx(Dune_action_plugin__Protocol) \
ocamlx(Dune_action_plugin__Sexpable_intf) \
ocamlx(Dune_filesystem_stubs) \
ocamlx(Dune_glob) \
ocamlx(Dune_glob__) \
ocamlx(Dune_glob__Glob) \
ocamlx(Dune_glob__Lexer) \
ocamlx(Dune_meta_parser) \
ocamlx(Dune_meta_parser__Meta_lexer) \
ocamlx(Dune_meta_parser__Meta_parser) \
ocamlx(Dune_re) \
ocamlx(Dune_re__) \
ocamlx(Dune_re__Automata) \
ocamlx(Dune_re__Category) \
ocamlx(Dune_re__Color_map) \
ocamlx(Dune_re__Core) \
ocamlx(Dune_re__Cset) \
ocamlx(Dune_re__Emacs) \
ocamlx(Dune_re__Fmt) \
ocamlx(Dune_re__Glob) \
ocamlx(Dune_re__Group) \
ocamlx(Dune_re__Pcre) \
ocamlx(Dune_re__Perl) \
ocamlx(Dune_re__Pmark) \
ocamlx(Dune_re__Posix) \
ocamlx(Dune_re__Re) \
ocamlx(Dune_re__Str) \
ocamlx(Dune_rpc) \
ocamlx(Dune_rpc_private) \
ocamlx(Dune_rpc_private__) \
ocamlx(Dune_rpc_private__Conv) \
ocamlx(Dune_rpc_private__Dbus_address) \
ocamlx(Dune_rpc_private__Exported_types) \
ocamlx(Dune_rpc_private__Fiber_intf) \
ocamlx(Dune_rpc_private__Import) \
ocamlx(Dune_rpc_private__Menu) \
ocamlx(Dune_rpc_private__Procedures) \
ocamlx(Dune_rpc_private__Registry) \
ocamlx(Dune_rpc_private__Sub) \
ocamlx(Dune_rpc_private__Types) \
ocamlx(Dune_rpc_private__Versioned) \
ocamlx(Dune_rpc_private__Where) \
ocamlx(Dune_section) \
ocamlx(Dune_site) \
ocamlx(Dune_site__) \
ocamlx(Dune_site__Helpers) \
ocamlx(Dune_site_plugins) \
ocamlx(Dune_site_plugins__) \
ocamlx(Dune_site_plugins__Meta_parser) \
ocamlx(Dune_site_plugins__Plugins) \
ocamlx(Dune_site_private) \
ocamlx(Dyn) \
ocamlx(Ocaml_config) \
ocamlx(Ocamlc_loc) \
ocamlx(Ocamlc_loc__) \
ocamlx(Ocamlc_loc__Lexer) \
ocamlx(Ordering) \
ocamlx(Pp) \
ocamlx(Stdune) \
ocamlx(Stdune__) \
ocamlx(Stdune__Ansi_color) \
ocamlx(Stdune__Appendable_list) \
ocamlx(Stdune__Applicative) \
ocamlx(Stdune__Applicative_intf) \
ocamlx(Stdune__Array) \
ocamlx(Stdune__Bin) \
ocamlx(Stdune__Bool) \
ocamlx(Stdune__Bytes) \
ocamlx(Stdune__Bytes_unit) \
ocamlx(Stdune__Caller_id) \
ocamlx(Stdune__Char) \
ocamlx(Stdune__Code_error) \
ocamlx(Stdune__Comparable) \
ocamlx(Stdune__Comparable_intf) \
ocamlx(Stdune__Comparator) \
ocamlx(Stdune__Either) \
ocamlx(Stdune__Env) \
ocamlx(Stdune__Env_path) \
ocamlx(Stdune__Escape) \
ocamlx(Stdune__Exn) \
ocamlx(Stdune__Exn_with_backtrace) \
ocamlx(Stdune__Fdecl) \
ocamlx(Stdune__Filename) \
ocamlx(Stdune__Float) \
ocamlx(Stdune__Fpath) \
ocamlx(Stdune__Hashable) \
ocamlx(Stdune__Hashtbl) \
ocamlx(Stdune__Hashtbl_intf) \
ocamlx(Stdune__Id) \
ocamlx(Stdune__Int) \
ocamlx(Stdune__Io) \
ocamlx(Stdune__Io_intf) \
ocamlx(Stdune__Lexbuf) \
ocamlx(Stdune__List) \
ocamlx(Stdune__Loc) \
ocamlx(Stdune__Loc0) \
ocamlx(Stdune__Map) \
ocamlx(Stdune__Map_intf) \
ocamlx(Stdune__Monad) \
ocamlx(Stdune__Monad_intf) \
ocamlx(Stdune__Monoid) \
ocamlx(Stdune__Monoid_intf) \
ocamlx(Stdune__Nonempty_list) \
ocamlx(Stdune__Nothing) \
ocamlx(Stdune__Option) \
ocamlx(Stdune__Or_exn) \
ocamlx(Stdune__Path) \
ocamlx(Stdune__Path_intf) \
ocamlx(Stdune__Pid) \
ocamlx(Stdune__Poly) \
ocamlx(Stdune__Predicate) \
ocamlx(Stdune__Proc) \
ocamlx(Stdune__Queue) \
ocamlx(Stdune__Result) \
ocamlx(Stdune__Scanf) \
ocamlx(Stdune__Seq) \
ocamlx(Stdune__Set) \
ocamlx(Stdune__Set_intf) \
ocamlx(Stdune__Sexp) \
ocamlx(Stdune__Signal) \
ocamlx(Stdune__Staged) \
ocamlx(Stdune__State) \
ocamlx(Stdune__String) \
ocamlx(Stdune__String_split) \
ocamlx(Stdune__Sys) \
ocamlx(Stdune__Table) \
ocamlx(Stdune__Temp) \
ocamlx(Stdune__Top_closure) \
ocamlx(Stdune__Top_closure_intf) \
ocamlx(Stdune__Tuple) \
ocamlx(Stdune__Type_eq) \
ocamlx(Stdune__Unit) \
ocamlx(Stdune__Univ_map) \
ocamlx(Stdune__Univ_map_intf) \
ocamlx(Stdune__User_error) \
ocamlx(Stdune__User_message) \
ocamlx(Stdune__User_warning) \
ocamlx(Xdg)"
RDEPENDS:${PN} += "libc.so.6(GLIBC_2.17)(64bit) \
ocaml(CamlinternalFormatBasics) \
ocaml(CamlinternalLazy) \
ocaml(Dynlink) \
ocaml(Stdlib) \
ocaml(Stdlib__Arg) \
ocaml(Stdlib__Array) \
ocaml(Stdlib__ArrayLabels) \
ocaml(Stdlib__Bigarray) \
ocaml(Stdlib__Buffer) \
ocaml(Stdlib__Bytes) \
ocaml(Stdlib__BytesLabels) \
ocaml(Stdlib__Char) \
ocaml(Stdlib__Complex) \
ocaml(Stdlib__Either) \
ocaml(Stdlib__Filename) \
ocaml(Stdlib__Format) \
ocaml(Stdlib__Fun) \
ocaml(Stdlib__Hashtbl) \
ocaml(Stdlib__Int) \
ocaml(Stdlib__Int32) \
ocaml(Stdlib__Int64) \
ocaml(Stdlib__Lazy) \
ocaml(Stdlib__Lexing) \
ocaml(Stdlib__List) \
ocaml(Stdlib__ListLabels) \
ocaml(Stdlib__Map) \
ocaml(Stdlib__MoreLabels) \
ocaml(Stdlib__Nativeint) \
ocaml(Stdlib__Obj) \
ocaml(Stdlib__Option) \
ocaml(Stdlib__Printexc) \
ocaml(Stdlib__Printf) \
ocaml(Stdlib__Queue) \
ocaml(Stdlib__Random) \
ocaml(Stdlib__Result) \
ocaml(Stdlib__Scanf) \
ocaml(Stdlib__Seq) \
ocaml(Stdlib__Set) \
ocaml(Stdlib__StdLabels) \
ocaml(Stdlib__String) \
ocaml(Stdlib__StringLabels) \
ocaml(Stdlib__Sys) \
ocaml(Stdlib__Uchar) \
ocaml(Unix) \
ocamlfind(compiler-libs) \
ocamlfind(dynlink) \
ocamlfind(unix) \
ocamlx(CamlinternalLazy) \
ocamlx(Dynlink) \
ocamlx(Stdlib) \
ocamlx(Stdlib__Arg) \
ocamlx(Stdlib__Array) \
ocamlx(Stdlib__ArrayLabels) \
ocamlx(Stdlib__Buffer) \
ocamlx(Stdlib__Bytes) \
ocamlx(Stdlib__BytesLabels) \
ocamlx(Stdlib__Char) \
ocamlx(Stdlib__Filename) \
ocamlx(Stdlib__Format) \
ocamlx(Stdlib__Fun) \
ocamlx(Stdlib__Hashtbl) \
ocamlx(Stdlib__Int) \
ocamlx(Stdlib__Int32) \
ocamlx(Stdlib__Int64) \
ocamlx(Stdlib__Lexing) \
ocamlx(Stdlib__List) \
ocamlx(Stdlib__ListLabels) \
ocamlx(Stdlib__Map) \
ocamlx(Stdlib__MoreLabels) \
ocamlx(Stdlib__Nativeint) \
ocamlx(Stdlib__Option) \
ocamlx(Stdlib__Printexc) \
ocamlx(Stdlib__Printf) \
ocamlx(Stdlib__Queue) \
ocamlx(Stdlib__Random) \
ocamlx(Stdlib__Scanf) \
ocamlx(Stdlib__Seq) \
ocamlx(Stdlib__Set) \
ocamlx(Stdlib__String) \
ocamlx(Stdlib__StringLabels) \
ocamlx(Stdlib__Sys) \
ocamlx(Unix)"

inherit rpm
